%% s_eyemovementsMosaic
%
% Illustrating the differential effect of eye movements on the fovea and
% periphery, as cone apertures change size.
% 

%% Generate two @cMosaic objects.  Fovea and periphery.

cmFovea = cMosaic(...
    'sizeDegs', [0.3 0.3], ...    
    'eccentricityDegs', [0 0], ...
    'rodIntrusionAdjustedConeAperture', true, ...
    'integrationTime', 5/1000);

cmPeriphery = cMosaic(...
    'sizeDegs', [0.3 0.3], ...      
    'eccentricityDegs', [5 0], ...
    'rodIntrusionAdjustedConeAperture', true, ...
    'integrationTime', 5/1000);


%% Generate fixational eye movements (10 trials, each lasting for 100 msec)

eyeMovementDurationSeconds = 100/1000;
nTrials = 10;

% These are the same because they have the same seed.
cmFovea.emGenSequence(eyeMovementDurationSeconds, ...
    'microsaccadeType', 'none', ...
    'nTrials', nTrials, ...
    'randomSeed', 1);

cmPeriphery.emGenSequence(eyeMovementDurationSeconds, ...
    'microsaccadeType', 'none', ...
    'nTrials', nTrials, ...
    'randomSeed', 1);

%% Extract the computed eye movement path

emPathsDegs = cmFovea.fixEMobj.emPosArcMin/60;

nTimePoints = size(emPathsDegs,2);

% Visualize the full emPaths on the mosaic
hFig = ieNewGraphWin;
axFovea = subplot(1,2,1);
axPeriphery = subplot(1,2,2);

for iTrial = 1:nTrials
    for iTimePoint = 1:nTimePoints
        cmFovea.visualize('figureHandle', hFig, 'axesHandle', axFovea, ...
            'conesAlpha', 0.4, ...
            'visualizedConeAperture', 'lightCollectingArea', ...
            'displayedEyeMovementData', struct('trial', iTrial, 'timePoints', 1:iTimePoint), ...
            'backgroundColor', [0 0 0], ...
            'plotTitle', sprintf('trial #%d, %2.0f msec', iTrial, cmFovea.fixEMobj.timeAxis(iTimePoint)*1000));
        cmPeriphery.visualize('figureHandle', hFig, 'axesHandle', axPeriphery, ...
            'conesAlpha', 0.4, ...
            'visualizedConeAperture', 'lightCollectingArea', ...
            'displayedEyeMovementData', struct('trial', iTrial, 'timePoints', 1:iTimePoint), ...
            'backgroundColor', [0 0 0], ...
            'plotTitle', sprintf('trial #%d, %2.0f msec', iTrial, cmPeriphery.fixEMobj.timeAxis(iTimePoint)*1000));
        drawnow;
    end
end

%% END