% t_cmosaicRodIntrusion2
%
% A few more rod intrusion examples.

% See 
%  t_cmosaicRodIntrusion for the main explanation
% 

%%
ieInit;

%% Make an OI

hParms = harmonicP;
hParms.row = 1024; hParms.col = 1024; hParms.freq = 10;
scene = sceneCreate('harmonic',hParms);
scene = sceneSet(scene,'fov',10);

oi = oiCreate('human'); oi = oiCompute(oi,scene); oiWindow(oi);
oi = oiCompute(oi,scene); oiWindow(oi);


%% Cone aperture rule
sigmaGaussian = 0.204;  % From McMahon et al, 2000
coneApertureModifiers = struct(...
    'smoothLocalVariations', true, ...
    'sigma',  sigmaGaussian, ...
    'shape', 'Gaussian');

%% Different mosaics

% In the periphery, there are gaps for the rods
cM1 = cMosaic(...
    'sourceLatticeSizeDegs', 60, ...
    'eccentricityDegs', [15 10], ...
    'sizeDegs', [4 1], ...
    'whichEye', 'right eye', ...
    'eccVaryingConeBlur', true, ...
    'rodIntrusionAdjustedConeAperture', true, ...
    'coneApertureModifiers', coneApertureModifiers, ...
    'randomSeed', 1234);
cM1.visualize;

%% Very big
cMWide = cMosaic(...
    'sourceLatticeSizeDegs', 60, ...
    'eccentricityDegs', [10 1], ...
    'sizeDegs', [6 1], ...
    'whichEye', 'right eye', ...
    'eccVaryingConeBlur', true, ...
    'rodIntrusionAdjustedConeAperture', true, ...
    'coneApertureModifiers', coneApertureModifiers, ...
    'randomSeed', 1234);
cMWide.visualize;

%% Even bigger
cMWidest = cMosaic(...
    'sourceLatticeSizeDegs', 60, ...
    'eccentricityDegs', [8 1], ...
    'sizeDegs', [10 3], ...
    'whichEye', 'right eye', ...
    'eccVaryingConeBlur', true, ...
    'rodIntrusionAdjustedConeAperture', true, ...
    'coneApertureModifiers', coneApertureModifiers, ...
    'randomSeed', 1234);
cMWidest.visualize;

%% Centered on fovea
cMFovea = cMosaic(...
    'sourceLatticeSizeDegs', 60, ...
    'eccentricityDegs', [0 0], ...
    'sizeDegs', [4 2], ...
    'whichEye', 'right eye', ...
    'eccVaryingConeBlur', true, ...
    'rodIntrusionAdjustedConeAperture', true, ...
    'coneApertureModifiers', coneApertureModifiers, ...
    'randomSeed', 1234);
cMFovea.visualize;

%% Compare small foveal section and small peripheral section
cMFoveaSmall = cMosaic(...
    'sourceLatticeSizeDegs', 60, ...
    'eccentricityDegs', [0 0], ...
    'sizeDegs', [1 1], ...
    'whichEye', 'right eye', ...
    'eccVaryingConeBlur', true, ...
    'rodIntrusionAdjustedConeAperture', true, ...
    'coneApertureModifiers', coneApertureModifiers, ...
    'randomSeed', 1234);
cMFoveaSmall.visualize;

cMPeriphery = cMosaic(...
    'sourceLatticeSizeDegs', 60, ...
    'eccentricityDegs', [8 8], ...
    'sizeDegs', [1 1], ...
    'whichEye', 'right eye', ...
    'eccVaryingConeBlur', true, ...
    'rodIntrusionAdjustedConeAperture', true, ...
    'coneApertureModifiers', coneApertureModifiers, ...
    'randomSeed', 1234);
cMPeriphery.visualize;


%%
oi = oiSet(oi,'fov',10);
allE = cM1.compute(oi);
uData = cM1.plot('excitations',allE);

% uData = cM1.plot('excitations',allE);
% uData = cM1.plot('excitations',allE,'label cones',true);

%% Near the fovea, smaller gaps
cM2 = cMosaic(...
    'sourceLatticeSizeDegs', 60, ...
    'eccentricityDegs', [5 3], ...
    'sizeDegs', [4 1], ...
    'whichEye', 'right eye', ...
    'eccVaryingConeBlur', true, ...
    'rodIntrusionAdjustedConeAperture', true, ...
    'coneApertureModifiers', coneApertureModifiers, ...
    'randomSeed', 1234);
cM2.visualize;

cM3 = cMosaic(...
    'sourceLatticeSizeDegs', 60, ...
    'eccentricityDegs', [1 2], ...
    'sizeDegs', [4 1], ...
    'whichEye', 'right eye', ...
    'eccVaryingConeBlur', true, ...
    'rodIntrusionAdjustedConeAperture', true, ...
    'coneApertureModifiers', coneApertureModifiers, ...
    'randomSeed', 1234);
allE = cM3.compute(oi);

cM3.visualize;
cM3.plot('excitations',allE,'label cones',true);


cM4 = cMosaic(...
    'sourceLatticeSizeDegs', 60, ...
    'eccentricityDegs', [5 0.5], ...
    'sizeDegs', [10 1], ...
    'whichEye', 'right eye', ...
    'eccVaryingConeBlur', true, ...
    'rodIntrusionAdjustedConeAperture', true, ...
    'coneApertureModifiers', coneApertureModifiers, ...
    'randomSeed', 1234);
allE = cM4.compute(oi);
uData = cM4.plot('excitations',allE);




