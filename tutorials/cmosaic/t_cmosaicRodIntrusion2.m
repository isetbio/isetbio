% t_cmosaicRodIntrusion2
%
% A few more rod intrusion examples.

% See 
%  t_cmosaicRodIntrusion for the main explanation
% 

sigmaGaussian = 0.204;  % From McMahon et al, 2000
coneApertureModifiers = struct(...
    'smoothLocalVariations', true, ...
    'sigma',  sigmaGaussian, ...
    'shape', 'Gaussian');

% In the periphery, there are gaps for the rods
cM1 = cMosaic(...
    'sourceLatticeSizeDegs', 60, ...
    'eccentricityDegs', [15 10], ...
    'sizeDegs', [4 1], ...
    'whichEye', 'right eye', ...
    'eccVaryingConeBlur', true, ...
    'rodIntrusionAdjustedConeAperture', true, ...
    'coneApertureModifiers', coneApertureModifiers, ...
    'randomSeed', 1234);
cM1.visualize;

% Near the fovea, smaller gaps
cM2 = cMosaic(...
    'sourceLatticeSizeDegs', 60, ...
    'eccentricityDegs', [5 3], ...
    'sizeDegs', [4 1], ...
    'whichEye', 'right eye', ...
    'eccVaryingConeBlur', true, ...
    'rodIntrusionAdjustedConeAperture', true, ...
    'coneApertureModifiers', coneApertureModifiers, ...
    'randomSeed', 1234);
cM2.visualize;

cM3 = cMosaic(...
    'sourceLatticeSizeDegs', 60, ...
    'eccentricityDegs', [1 2], ...
    'sizeDegs', [4 1], ...
    'whichEye', 'right eye', ...
    'eccVaryingConeBlur', true, ...
    'rodIntrusionAdjustedConeAperture', true, ...
    'coneApertureModifiers', coneApertureModifiers, ...
    'randomSeed', 1234);
cM3.visualize;

% This is very cool because it touches on the fovea and goes out to 10
% deg.  It shows the rod spacing as well.  So, pretty much everything
% you might want.
cM4 = cMosaic(...
    'sourceLatticeSizeDegs', 60, ...
    'eccentricityDegs', [5 0.5], ...
    'sizeDegs', [10 1], ...
    'whichEye', 'right eye', ...
    'eccVaryingConeBlur', true, ...
    'rodIntrusionAdjustedConeAperture', true, ...
    'coneApertureModifiers', coneApertureModifiers, ...
    'randomSeed', 1234);
cM4.visualize;

hParms = harmonicP;
hParms.row = 1024; hParms.col = 1024;
hParms.freq = 10;
scene = sceneCreate('harmonic',hParms);
oi = oiCreate;
oi = oiCompute(oi,scene);
oiWindow(oi);

allE = cM4.compute(oi);
cM4.plot('excitations',allE);

