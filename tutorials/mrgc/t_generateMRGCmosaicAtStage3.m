%% Generate mRGC mosaics at different substages of stage 3 synthesis (cone-RFsurround connectivity)
%
% Description:
%   Demonstrates how to generate an mRGC mosaic at stage 3A, 3B or 3C of connectivity
%   At stage 3A we compute input cone mosaic STF responses
%   At stage 3B ...
%

% History:
%    08/28/25  NPC  Wrote it.


close all; clear all;

% Specify desired spatialChromaticUniformityTradeoff for the RGC RF centers
% A value of 1 corresponds to maximal spatial homogeneity
% A value of 0 corresponds to maximal spectral purity
spatialChromaticUniformityTradeoff = 1.0; 

% Name encoding rgcMosaic
rgcMosaicName = 'PLOSpaperNasal7DegsMosaic';

% Which optics to employ
opticsSubjectName = 'PLOSpaperDefaultSubject';

% Which species to employ 
% Choose between {'macaque', 'human'}. If 'macaque' is chosen, the input
% cone mosaic has a 1:1 L/M cone ratio.
coneMosaicSpecies = 'human';


% Default STF parameters: mean Rs/Rc, mean Ks/Kc (Rs/Rc)^2
targetVisualSTFdescriptorToOptimizeFor = 'default';

% STF with an Rs/Rc ratio that is 1.3 x mean, and mean Ks/Kc (Rs/Rc)^2
%targetVisualSTFdescriptorToOptimizeFor = 'x1.3 RsRcRatio';

% Generate the necessary mosaic params struct
pStruct = RGCMosaicConstructor.helper.utils.initializeRGCMosaicGenerationParameters(...
    coneMosaicSpecies, opticsSubjectName, rgcMosaicName, targetVisualSTFdescriptorToOptimizeFor);

% Whether to regenerate the mosaic at stage3A 
% (computation of input cone mosaic STF responses)
regenerateMosaicAtStage3A = ~true;

% Whether to regenerate the mosaic at stage3B 
% (determine optimized surround cone pooling functions so as to yield C&K '95 macaque Rs/Rc intS/C ratios
% appropriate for  the mosaic's eccentricity)
regenerateMosaicAtStage3B = ~true;

% Inspect the optimized surround pooling functions
inspectMosaicAtStage3B = true;

% Whether to regenerate the mosaic at stage3C. This is the compute-ready mosaic
regenerateMosaicAtStage3C = ~true;


% Whether to generate separate figures for each component (better for figures in a paper)
% or a single PDF with all components in a panel array. Summary PDFs have
% unique names for each visualized location.
% Non-summary PDFs get overriden for each visualized location (but the code
% pauses at each location). 
% This flag has an effect only for Stage 3B (inspection of optimized
% surround cone pooling functions)
summaryInsteadOfSeparateInspectionFigures = true;


optimizationPositionsAndSizesGrids = RGCMosaicConstructor.compute.surroundOptimizationGrid(...
		pStruct.rgcMosaicSurroundOptimization.peripheralOptimizationSamplingScheme, ...
		pStruct.rgcMosaicSurroundOptimization.minGridSize, ...
		pStruct.rgcMosaicSurroundOptimization.maxGridSize, ...
		pStruct.whichZernikeDataBase, pStruct.whichEye, pStruct.sourceLatticeSizeDegs, ...
		pStruct.rgcMosaicSurroundOptimization.mosaicEccDegs, ...
		pStruct.rgcMosaicSurroundOptimization.mosaicSizeDegs, ...
		'withExtremePositions', pStruct.rgcMosaicSurroundOptimization.addEightExtremePositions);


% Do all positions
optimizationPositionIndicesToCompute = 1:size(optimizationPositionsAndSizesGrids,1);

% Do the last 8 positions (only for this run)
optimizationPositionIndicesToCompute = size(optimizationPositionsAndSizesGrids,1):-1:(size(optimizationPositionsAndSizesGrids,1)-7);

% Next to run
startingIndex = 2;
optimizationPositionIndicesToCompute = optimizationPositionIndicesToCompute(startingIndex:2:end);

% Generate the surroundRetinalConePoolingModel params struct
surroundRetinalConePoolingModelParamsStruct = ...
	RGCMosaicConstructor.helper.surroundPoolingOptimizerEngine.generateSurroundRetinalConePoolingStruct(...
		pStruct.rgcMosaicSurroundOptimization.optimizationStrategy);

% Generate targetVisualSTFmodifierStruct
targetVisualSTFmodifierStruct = RGCMosaicConstructor.helper.surroundPoolingOptimizerEngine.generateTargetVisualSTFmodifiersStruct(...
	pStruct.rgcMosaicSurroundOptimization.targetVisualSTFdescriptor);

% Generate the surroundConnectivity simulation params struct 
surroundConnectivitySimulationParamsStruct = RGCMosaicConstructor.helper.surroundPoolingOptimizerEngine.generateSurroundConnectivitySimulationParamsStruct(...
	pStruct.whichZernikeDataBase, pStruct.whichSubjectID, pStruct.rgcMosaic.employRFCenterOverlappingMosaic, ...
	optimizationPositionsAndSizesGrids, surroundRetinalConePoolingModelParamsStruct, ...
	targetVisualSTFmodifierStruct);


if (regenerateMosaicAtStage3A)
    % Whether to visualize the input cone mosaic responses during their computation
    visualizeInputConeMosaicSTFResponseSequences = ~true;

    visualizeSamplingPositionsForUncroppedMosaic = true;
	visualizeSpatialRelationshipToSourceMosaic = true;

	% Compute input cone mosaic STF responses
	RGCMosaicConstructor.compute.poolingFunctionsForSurroundOptimizationGrid(...
 		pStruct.whichEye, ...
		pStruct.rgcMosaicSurroundOptimization.mosaicEccDegs, ...
		pStruct.rgcMosaicSurroundOptimization.mosaicSizeDegs, ...
 		pStruct.rgcMosaic.spatialChromaticUniformityTradeoff, ...
 		pStruct.customLMSconeDensities, ...
 		surroundConnectivitySimulationParamsStruct, ...
 		'optimizationPositionIndicesToCompute', optimizationPositionIndicesToCompute, ...
 		'computeInputConeMosaicResponses', true, ...
		'optimizeSurroundConePooling', false, ...
		'visualizeInputConeMosaicSTFResponseSequences', visualizeInputConeMosaicSTFResponseSequences, ...
		'visualizeSamplingPositionsForUncroppedMosaic', visualizeSamplingPositionsForUncroppedMosaic, ...
    	'visualizeSpatialRelationshipToSourceMosaic', visualizeSpatialRelationshipToSourceMosaic);
    return;
end  % regenerateMosaicAtStage3A


if (regenerateMosaicAtStage3B) || (inspectMosaicAtStage3B)

    if (regenerateMosaicAtStage3B)
        % Optimize all numerosities
        centerConeNumerositiesToOptimize = [];
    	    
        % Query user as to which cone dominance to optimize, 1 or 2
        %centerConeDominanceToOptimize = input('Cone dominance of RF center for which to optimize surrounds. 1: L-cone dominance, 2:M-cone dominance. Your choice: ');
    
        % Optimize L-cone centers
        centerConeDominanceToOptimize = 2;
    
        % Options for loading the nitial optimization params
	    % Choose from {'none', 'default', 'imported exact match' or 'imported closest match'}
	    %initialSurroundOptimizationValuesSource = 'imported exact match';	
	    initialSurroundOptimizationValuesSource = 'imported closest match';
	    %initialSurroundOptimizationValuesSource = 'none';	
	    initialSurroundOptimizationValuesSource = 'skip if previous file exists';
    end

    % User may select to use params from a fixed H1 cell index
    if (strcmp(surroundRetinalConePoolingModelParamsStruct.name, 'PackerDacey2002H1FixedCellIndex')) 
		% Query user regarding the H1 cell index to employ
		[fixedH1CellIndex, inspectedOptimizationResultsTargetRFcenterConesNum, ...
		     inspectedOptimizationResultsTargetRFcenterDominantConeType, ...
		     theOptimizationResultsFileNameToBeInspected] = RGCMosaicConstructor.helper.queryUserFor.fixedH1CellIndex(...
			    (guiSelectedSingleOptimizationResult&&performIspectOptimizationResultsAction), pStruct.rgcMosaic.employRFCenterOverlappingMosaic);

		% Add to the surroundRetinalConePoolingModelParamsStruct the fixed H1 cell index to be used
		surroundRetinalConePoolingModelParamsStruct.fixedH1CellIndex = fixedH1CellIndex;
    end

    if (inspectMosaicAtStage3B)
	    % Get the (inspectedOptimizationResultsTargetRFcenterConesNum, inspectedOptimizationResultsTargetRFcenterDominantConeType)
		inspectedOptimizationResultsTargetRFcenterConesNum = input('Numerosity of RF center cones for which surrounds were optimized. Enter [] for all numerosities found in the analyzed RGCMosaic patch: ');
	    inspectedOptimizationResultsTargetRFcenterDominantConeType = input('Cone dominance of RF center for which surrounds were optimized. 1: L-cone dominance, 2:M-cone dominance. Your choice: ');
    end

    % Generate targetVisualSTFmodifierStruct
    targetVisualSTFmodifierStruct = RGCMosaicConstructor.helper.surroundPoolingOptimizerEngine.generateTargetVisualSTFmodifiersStruct(...
	    pStruct.rgcMosaicSurroundOptimization.targetVisualSTFdescriptor);

    % Generate the surroundConnectivity simulation params struct 
    surroundConnectivitySimulationParamsStruct = RGCMosaicConstructor.helper.surroundPoolingOptimizerEngine.generateSurroundConnectivitySimulationParamsStruct(...
	    pStruct.whichZernikeDataBase, pStruct.whichSubjectID, pStruct.rgcMosaic.employRFCenterOverlappingMosaic, ...
	    optimizationPositionsAndSizesGrids, surroundRetinalConePoolingModelParamsStruct, ...
	    targetVisualSTFmodifierStruct);


    if (inspectMosaicAtStage3B)
        % Get all the surround pooling optimization file names
        [theOptimizationResultsFileNameCollectionToBeInspected, theOptimizationResultsTargetCenterConesNumToBeInspected] = ...
				RGCMosaicConstructor.compute.poolingFunctionsForSurroundOptimizationGrid(...
			 		pStruct.whichEye,  ...
			 		pStruct.rgcMosaicSurroundOptimization.mosaicEccDegs, ...
					pStruct.rgcMosaicSurroundOptimization.mosaicSizeDegs, ...
 					pStruct.rgcMosaic.spatialChromaticUniformityTradeoff, ...
			 		pStruct.customLMSconeDensities, ...
			 		surroundConnectivitySimulationParamsStruct, ...
			        'optimizationPositionIndicesToCompute', optimizationPositionIndicesToCompute, ...
			        'centerConeNumerositiesToOptimize', inspectedOptimizationResultsTargetRFcenterConesNum, ...
			        'centerConeDominanceToOptimize', inspectedOptimizationResultsTargetRFcenterDominantConeType, ...
			 		'computeInputConeMosaicResponses', ~true, ...
					'optimizeSurroundConePooling', ~true, ...
					'onlyReturnSurroundOptimizationResultFilenames', true);

        % Go through each optimization file and plot a summary of theoptimization results
        for iOptimizationResultsFileIndex = 1:numel(theOptimizationResultsFileNameCollectionToBeInspected)

			theOptimizationResultsFileNameToBeInspected = theOptimizationResultsFileNameCollectionToBeInspected{iOptimizationResultsFileIndex};
			
            % See if the file exists
            dataAvailable = false;
			try
				load(theOptimizationResultsFileNameToBeInspected, ...
		   			'theMRGCMosaic', ...
			   		'targetVisualSTFparams', ...
			        'theTargetRGCindex', ...
			        'optimizationResults');
				dataAvailable = true;
			catch 
		   		fprintf('\nThe optimization results file \n\t %s \n was **NOT** found. Skipping inspection.\n', theOptimizationResultsFileNameToBeInspected);
		   		continue
            end

            % Specify visualization parameters
            % Use fixed spatial support and scale bar when plotting the cone weights maps and line weighting functions
			% If [] is specified, these are computed automatically 
			if (sqrt(sum(pStruct.rgcMosaicSurroundOptimization.mosaicEccDegs.^2,2)) > 20)
				fixedSpatialSupportTickSeparationArcMinForConePoolingMaps =  60;

				% Match the Field 2010 paper scale bar in Fig. 4 which was 25 microns
				Field2010Figure4CellsScaleBarMicrons = 25;

				% Convert to degs in macaque retina
				Field2010Figure4CellsScaleBarDegs = RGCMosaicConstructor.helper.convert.eccentricityInMacaqueRetina('MMsToDegs', Field2010Figure4CellsScaleBarMicrons * 1e-3);

				% Convert to degs in human retina
				fixedScaleBarDegsForConePoolingMaps = RGCMosaicConstructor.helper.convert.eccentricityDegsBetweenSpecies('MacaqueRetinaToHumanRetina', Field2010Figure4CellsScaleBarDegs);

		    elseif (sqrt(sum(pStruct.rgcMosaicSurroundOptimization.mosaicEccDegs.^2,2)) < 1)
		    	% For foveal mosaics, 2.4 arc min which is 0.04 degs
		    	fixedSpatialSupportTickSeparationArcMinForConePoolingMaps =  2.4;
				fixedScaleBarDegsForConePoolingMaps =  0.05;

			else
				% 6 arc min which is 0.1 degs
				fixedSpatialSupportTickSeparationArcMinForConePoolingMaps =  6;
				fixedScaleBarDegsForConePoolingMaps =  0.1;
            end

            [pdfExportSubDir, theSummaryPDFfileName] = RGCMosaicConstructor.filepathFor.optimizationResultsSummaryPDF(...
                theOptimizationResultsFileNameToBeInspected, ...
                'generateMissingSubDirs', true);

            % Visualize imported optimization results and export PDFs of the analyses
			RGCMosaicConstructor.visualize.optimizationResults(optimizationResults, ...
				theMRGCMosaic, theTargetRGCindex, targetVisualSTFparams, ...
				pdfExportSubDir, ...
				theOptimizationResultsTargetCenterConesNumToBeInspected(iOptimizationResultsFileIndex), ...
				inspectedOptimizationResultsTargetRFcenterDominantConeType, ...
				summaryInsteadOfSeparateInspectionFigures, theSummaryPDFfileName, ...
				'fixedSpatialSupportTickSeparationArcMin', fixedSpatialSupportTickSeparationArcMinForConePoolingMaps, ...
				'fixedScalaBarDegs', fixedScaleBarDegsForConePoolingMaps, ...
				'contourGenerationMethod', 'ellipseFitToPooledConePositions', ...
				'maxNumberOfConesOutsideContour', 0);

        end % for iOptimizationResultsFileIndex

    end % if (inspectMosaicAtStage3B)

    if (regenerateMosaicAtStage3B)
        % The default initial values
	    defaultUserSuppliedInitialValuesForSurroundPoolingModel = struct(...
   		    'poolingModel', struct(...
   			    'name', surroundConnectivitySimulationParamsStruct.poolingOptimizationParamsStruct.poolingModel.name, ...
   			    'weightsComputeHandle', surroundConnectivitySimulationParamsStruct.poolingOptimizationParamsStruct.poolingModel.weightsComputeHandle), ...
   		    'optimizedValues', struct(...
   			    'Kc', 1, ...
   			    'RwDegs', 0.258, ...
   			    'KsKcRatio', 0.723, ...
   			    'VnVwRatio', 0.175, ...
   			    'RnRwRatio', 0.227) ...
       		    );
    
	    switch (initialSurroundOptimizationValuesSource)
		    case {'imported exact match', 'imported closest match'}
			    userSuppliedInitialValuesForSurroundPoolingModel = defaultUserSuppliedInitialValuesForSurroundPoolingModel;
    
			    % Try to load optimizationResults from a previously generated optimizationResults file
			    optimizationResults = ...
				    RGCMosaicConstructor.helper.surroundPoolingOptimizerEngine.findPreviouslyOptimizedSurroundPoolingModels(...
					    pStruct.whichEye,  ...
			 		    pStruct.rgcMosaicSurroundOptimization.mosaicEccDegs, ...
					    pStruct.rgcMosaicSurroundOptimization.mosaicSizeDegs, ...
 					    pStruct.rgcMosaic.spatialChromaticUniformityTradeoff, ...
			 		    pStruct.customLMSconeDensities, ...
			 		    surroundConnectivitySimulationParamsStruct, ...
					    'targetRFcenterConesNum', centerConeNumerositiesToOptimize, ...
					    'targetRFcenterDominantConeType', centerConeDominanceToOptimize, ...
					    'initialSurroundOptimizationValuesSource', initialSurroundOptimizationValuesSource, ...
					    'optimizationPositionIndicesToCompute', optimizationPositionIndicesToCompute);
			    if (~isempty(optimizationResults))
    			    % Extract optimizedValues from the loaded optimizationResults
    			    userSuppliedInitialValuesForSurroundPoolingModel.optimizedValues = ...		
    				    RGCMosaicConstructor.helper.surroundPoolingOptimizerEngine.extractPreviouslyOptimizedValues(optimizationResults);
    		    end
    		    % Try to load an exact optimizationResults file at runtime
    		    userSuppliedInitialValuesForSurroundPoolingModel.attemptToLoadExactOptimizationResultsFile = true;
    		    userSuppliedInitialValuesForSurroundPoolingModel.skipOptimizationIfOptimizationFileExists = false;
    
    	    case 'skip if previous file exists'
    		    userSuppliedInitialValuesForSurroundPoolingModel = defaultUserSuppliedInitialValuesForSurroundPoolingModel;
    
			    % Try to load optimizationResults from a previously generated optimizationResults file
			    optimizationResults = ...
				    RGCMosaicConstructor.helper.surroundPoolingOptimizerEngine.findPreviouslyOptimizedSurroundPoolingModels(...
					    pStruct.whichEye,  ...
			 		    pStruct.rgcMosaicSurroundOptimization.mosaicEccDegs, ...
					    pStruct.rgcMosaicSurroundOptimization.mosaicSizeDegs, ...
 					    pStruct.rgcMosaic.spatialChromaticUniformityTradeoff, ...
			 		    pStruct.customLMSconeDensities, ...
			 		    surroundConnectivitySimulationParamsStruct, ...
					    'targetRFcenterConesNum', centerConeNumerositiesToOptimize, ...
					    'targetRFcenterDominantConeType', centerConeDominanceToOptimize, ...
					    'initialSurroundOptimizationValuesSource', 'imported exact match', ...
					    'optimizationPositionIndicesToCompute', optimizationPositionIndicesToCompute);
			    if (~isempty(optimizationResults))
    			    % Extract optimizedValues from the loaded optimizationResults
    			    userSuppliedInitialValuesForSurroundPoolingModel.optimizedValues = ...		
    				    RGCMosaicConstructor.helper.surroundPoolingOptimizerEngine.extractPreviouslyOptimizedValues(optimizationResults);
    		    end
    
    		    % Try to load an exact optimizationResults file at runtime
    		    userSuppliedInitialValuesForSurroundPoolingModel.attemptToLoadExactOptimizationResultsFile = true;
    		    userSuppliedInitialValuesForSurroundPoolingModel.skipOptimizationIfOptimizationFileExists = true;
    
		    case 'default'
			    % Generate userSuppliedInitialValuesForSurroundPoolingModel from scratch
	    	    userSuppliedInitialValuesForSurroundPoolingModel = defaultUserSuppliedInitialValuesForSurroundPoolingModel;
	    	    userSuppliedInitialValuesForSurroundPoolingModel.skipOptimizationIfOptimizationFileExists = false;
    
		    case 'none'
			    userSuppliedInitialValuesForSurroundPoolingModel = [];
    
		    otherwise
			    error('Unknown initialSurroundOptimizationValuesSource: ''%s''.\n', initialSurroundOptimizationValuesSource);
	    end % switch (initialSurroundOptimizationValuesSource)

	    % Optimize surround pooling weights !
	    RGCMosaicConstructor.compute.poolingFunctionsForSurroundOptimizationGrid(...
		    pStruct.whichEye,  ...
		    pStruct.rgcMosaicSurroundOptimization.mosaicEccDegs, ...
		    pStruct.rgcMosaicSurroundOptimization.mosaicSizeDegs, ...
 		    pStruct.rgcMosaic.spatialChromaticUniformityTradeoff, ...
		    pStruct.customLMSconeDensities, ...
		    surroundConnectivitySimulationParamsStruct, ...
            'optimizationPositionIndicesToCompute', optimizationPositionIndicesToCompute, ...
            'centerConeNumerositiesToOptimize', centerConeNumerositiesToOptimize, ...
            'centerConeDominanceToOptimize',centerConeDominanceToOptimize, ...
 		    'computeInputConeMosaicResponses', ~true, ...
		    'optimizeSurroundConePooling', true, ...
		    'doNotWorryAboutMaximizingTargetRFcenterLMconeRatio', pStruct.rgcMosaicSurroundOptimization.employLconeDominanceOptimizationOnly, ...
		    'userSuppliedInitialValuesForModelVariables', userSuppliedInitialValuesForSurroundPoolingModel, ...
		    'visualizeFullAndMaximalExcursionSTF', true, ...
		    'visualizeGaussianFitToCenterSTF', true, ...
		    'onlyReturnSurroundOptimizationResultFilenames', false);
    end % if (regenerateMosaicAtStage3B)

end %if (regenerateMosaicAtStage3B) || (inspectMosaicAtStage3B)


if (regenerateMosaicAtStage3C)
    visualizeSurroundConeWeightsInterpolationProcess = false;
    visualizeOptimizationGridOnTopOfMosaic = true;

    % Do not introduce additional variance to the intSens surround-to-center ratio
    surroundVarianceInComputeReadyMosaic = struct();

	% Or introduce additional variance and a bias
	if ((~isempty(pStruct.rgcMosaicSurroundOptimization.intSensRatioBias))&&(~isempty(pStruct.rgcMosaicSurroundOptimization.intSensRatioVariance)))
			surroundVarianceInComputeReadyMosaic = struct(...
				'intSensRatioBias', pStruct.rgcMosaicSurroundOptimization.intSensRatioBias, ...
				'intSensRatioSigma', sqrt(pStruct.rgcMosaicSurroundOptimization.intSensRatioVariance));
    end

    % Only visualize the locations where the surround pooling functions were generated
    if (visualizeOptimizationGridOnTopOfMosaic)
        hFig = RGCMosaicConstructor.compute.computeReadyMosaic(...
			pStruct.whichEye, ...
			pStruct.rgcMosaicSurroundOptimization.mosaicEccDegs, ...
			pStruct.rgcMosaicSurroundOptimization.mosaicSizeDegs, ...
 			pStruct.rgcMosaic.spatialChromaticUniformityTradeoff, ...
			pStruct.customLMSconeDensities, ...
			surroundConnectivitySimulationParamsStruct, ...
			optimizationPositionIndicesToCompute, ...
 			visualizeOptimizationGridOnTopOfMosaic, ...
            'employLconeDominanceOptimizationOnly', pStruct.rgcMosaicSurroundOptimization.employLconeDominanceOptimizationOnly, ...
 			'surroundVarianceInComputeReadyMosaic', surroundVarianceInComputeReadyMosaic, ...
 			'onlyVisualizeOptimizationGrid', true, ...
 			'visualizeInterpolationProcess', false);
    end % if (visualizeOptimizationGridOnTopOfMosaic)

end % if (regenerateMosaicAtStage3C)