%% Introduction to the RGCMosaic object: mosaic inspection
%
% Description:
%    Demonstrates the following:
%    (i)   how to load a pre-baked midget RGC mosaic, 
%    (ii)  visualize the mosaic of RF centers,
%    (iii) visualize the PSF of the optics used to build the mosaic
%    (iv)  visualize the RF center and surround cone pooling maps of
%          individual cells within the mosaic
%


% History:
%    10/03/25  NPC  Wrote it.

function t_mRGCMosaicInspect
    % Initialize
    clearvars;
    close all;

    % Use 8 CPU cores
    AppleSiliconParPoolManager(8);

    % List the locally-available prebaded mosaics
    % themRGCmosaicFileNames = mRGCMosaic.listPrebakedMosaics();
   
    % Load one of the prebaked mRGC mosaics. 
    % We need to specify 4 pieces of information:
    % (A) the eccentricity and size of the mosaic
    % (B) the surround optimization method
    % (C) the optics under which the mosaic was optimized

    % (A) Eccentricity
    % Load an 11x11 deg mosaic that was synthesized at 7 degrees along the nasal meridian
    % using optics from Polans subject with rank order 9
    mosaicParams.eccDegs  = [7 0];
    mosaicParams.sizeDegs = [11 11];

    
    % (B) Surround optimization method
    mosaicParams.spatialCompactnessSpectralPurityTradeoff = 1;
    mosaicParams.surroundOptimizationSubString = 'PackerDacey2002H1freeLowH1paramsNarrowVisualSTFparamTolerance_vSTF_1.0_1.0';


    % (C) Optics under which the mosaic was optimized
    opticsParams.ZernikeDataBase = 'Polans2015';
    opticsParams.subjectRankOrder = 9; 
    opticsParams.type = 'nativeOptics';
    opticsParams.refractiveErrorDiopters = [];
    opticsParams.visualizePSFonTopOfConeMosaic = ~true;


    % (D) Visualize a small patch (2x1 degs) of the mosaic, centered at 10 degrees
    mosaicParams.cropParams = struct(...
        'sizeDegs', [2 1], ...
        'eccentricityDegs', [10 0] ...
        );
    
    
    % Load the desired mRGCmosaic and generated the optics for the computation
    [theMRGCmosaic, ~, thePSF] = mRGCMosaic.loadPrebakedMosaic(mosaicParams, opticsParams);

    % Target wavelenth at which the visualized PSF is sliced at
    targetWavelenth = 550;
    [~, theVisualizedWavelengthIndex] = min(abs(thePSF.supportWavelength - targetWavelenth));

    % Generate the PSD data struct for visualization
    thePSFData.data = squeeze(thePSF.data(:,:,theVisualizedWavelengthIndex));
    thePSFData.supportXdegs = thePSF.supportX/60;
    thePSFData.supportYdegs = thePSF.supportY/60;


    % Visualize the mosaic with the corresponding optical PSF superimposed
    % on the center of the mosaic. Here we use a custom visualization domain extending over only 
    % part of the mosaic, so as to improve  visualization of the PSF
    visualizedWidthDegs = 0.8;
    domainVisualizationLimits(1:2) = theMRGCmosaic.eccentricityDegs(1) + 0.5 * visualizedWidthDegs * [-1 1];
    domainVisualizationLimits(3:4) = theMRGCmosaic.eccentricityDegs(2) + 0.5 * visualizedWidthDegs * [-1 1];
    domainVisualizationTicks = struct(...
        'x', theMRGCmosaic.eccentricityDegs(1) + 0.5 * visualizedWidthDegs * [-1 -0.5 0 0.5 1], ...
        'y', theMRGCmosaic.eccentricityDegs(2) + 0.5 * visualizedWidthDegs * [-1 -0.5 0 0.5 1]);


    % Subdirectory for exporting the generated PDFs
    exportVisualizationPDFdirectory = 'mosaicComponentPDFs';
    
    % The full path where the generated PDFs will be stored can be found like so:
    % p = getpref('isetbio');
    % fullPath = fullfile(p.rgcResources.figurePDFsDir,exportVisualizationPDFdirectory);

    % Visualize the mosaic of mRGC RF centers
    % identifying cones that are pooled by the RF center mechanism with
    % a weight >= mRGCMosaic.sensitivityAtPointOfOverlap;
    % This representation is like the representation used in visualizing 
    % mosaics of RGCs in typical in-vitro experiments (e.g. by the Chichilnisky lab)
    minCenterConeWeight = mRGCMosaic.sensitivityAtPointOfOverlap;
    
    theMRGCmosaic.visualize(...
        'identifyInputCones', true, ...
        'identifyPooledCones', true, ...
        'inputConesAlpha', 0.5, ...
        'identifiedConeAperture', 'lightCollectingArea4sigma', ...
        'identifiedConeApertureThetaSamples', 16, ...
        'minConeWeightVisualized', minCenterConeWeight, ...
        'centerSubregionContourSamples', 32, ....
        'labeledRGCsLineWidth', 4, ...
        'plotTitle', sprintf('min center weight visualized: %2.3f', minCenterConeWeight), ...
        'domainVisualizationLimits', domainVisualizationLimits, ...
        'domainVisualizationTicks', domainVisualizationTicks, ...
        'withSuperimposedPSF', thePSFData, ...
        'visualizationPDFfileName', 'mRGCmosaicWithPSF', ...
        'exportVisualizationPDF', true, ...
        'exportVisualizationPDFdirectory', exportVisualizationPDFdirectory);


    % Visualize the mosaic, but now identify cones that are by the RF center mechanism with
    % a weight >= 0.01. This helps see the overlap between mRGC RF centers
    minCenterConeWeight = 0.01;

    theMRGCmosaic.visualize(...
        'identifyInputCones', true, ...
        'identifyPooledCones', true, ...
        'inputConesAlpha', 0.5, ...
        'identifiedConeAperture', 'lightCollectingArea4sigma', ...
        'identifiedConeApertureThetaSamples', 16, ...
        'minConeWeightVisualized', minCenterConeWeight, ...
        'centerSubregionContourSamples', 32, ...
        'labeledRGCsLineWidth', 4, ...
        'domainVisualizationLimits', domainVisualizationLimits, ...
        'domainVisualizationTicks', domainVisualizationTicks, ...
        'plotTitle', sprintf('min center weight visualized: %2.3f', minCenterConeWeight), ...
        'visualizationPDFfileName', sprintf('mRGCmosaicMinCenterConeWeight_%2.3f', minCenterConeWeight), ...
        'exportVisualizationPDF', true, ...
        'exportVisualizationPDFdirectory', exportVisualizationPDFdirectory);

    
    % Back to default visualized cone weights
    minCenterConeWeight = mRGCMosaic.sensitivityAtPointOfOverlap;

    % Visualize the mRGC mosaic and its entire input cone mosaic, 
    % identifying the location of one exemplar mRGC
    % The index of the exemplar mRGC
    theTargetRGCindex = 97;

    % Ticks every 1 deg
    domainVisualizationTicks = struct(...
        'x', -30:1:30, ...
        'y', -30:1:30);

    theMRGCmosaic.visualize(...
        'identifyInputCones', true, ...
        'identifyPooledCones', true, ...
        'inputConesAlpha', 0.5, ...
        'identifiedConeAperture', 'lightCollectingArea4sigma', ...
        'identifiedConeApertureThetaSamples', 16, ...
        'minConeWeightVisualized', minCenterConeWeight, ...
        'centerSubregionContourSamples', 32, ...
        'labelRGCsWithIndices', theTargetRGCindex, ...
        'labeledRGCsLineWidth', 2, ...
        'domainVisualizationTicks', domainVisualizationTicks, ...
        'plotTitle', sprintf('min center weight visualized: %2.3f', minCenterConeWeight), ...
        'visualizationPDFfileName', sprintf('mRGCmosaicMinCenterConeWeight_%2.3f', minCenterConeWeight), ...
        'exportVisualizationPDF', true, ...
        'exportVisualizationPDFdirectory', exportVisualizationPDFdirectory);

    
    % Plot the cone pooling RF map of the exemplar mRGC
    figNo = 1000; figPos = [1000 500];

    % Tick separation in arc min
    spatialSupportTickSeparationArcMin = 12;

    % Add a scale bar, 0.15 degs in size
    scaleBarDegs = 0.15;

    % Include surround cones whose pooling weights are >= 0.001
    minSurroundConeWeight = 0.001;
    
    theMRGCmosaic.visualizeCenterSurroundConePoolingMap(theTargetRGCindex, ...
            'minConeWeightForVisualizingRFcenterPooling', minCenterConeWeight, ...
            'minConeWeightForVisualizingRFsurroundPooling', minSurroundConeWeight, ...
            'minSurroundConeWeightRelativity', 'center', ...
            'spatialSupportTickSeparationArcMin', spatialSupportTickSeparationArcMin, ...
            'withLineWeightingFunctions', false, ...
            'scaleBarDegs', scaleBarDegs, ...
            'doNotLabelScaleBar', true, ...
            'plotTitle', sprintf('scale bar: %2.2f degs', scaleBarDegs), ...
            'figNo', figNo, ...
            'figPos', figPos, ...
            'exportToFigurePDFsDirWithPDFFileName', sprintf('RFmap%d.pdf', theTargetRGCindex), ...
            'pdfExportSubDir', exportVisualizationPDFdirectory);

    % Plot the cone pooling RF map of the exemplar mRGC along with
    % line weighting functions of the center and of the surround cone pooling weights
    % along the horizontal and vertical axes
    theMRGCmosaic.visualizeCenterSurroundConePoolingMap(theTargetRGCindex, ...
            'minConeWeightForVisualizingRFcenterPooling', minCenterConeWeight, ...
            'minConeWeightForVisualizingRFsurroundPooling', minSurroundConeWeight, ...
            'minSurroundConeWeightRelativity', 'center', ...
            'spatialSupportTickSeparationArcMin', spatialSupportTickSeparationArcMin, ...
            'withLineWeightingFunctions', true, ...
            'scaleBarDegs', scaleBarDegs, ...
            'doNotLabelScaleBar', true, ...
            'plotTitle', sprintf('scale bar: %2.2f degs', scaleBarDegs), ...
            'figNo', figNo+1, ...
            'figPos', figPos, ...
            'exportToFigurePDFsDirWithPDFFileName', sprintf('RFmap%dWithLineWeightingFunctions.pdf', theTargetRGCindex), ...
            'pdfExportSubDir', exportVisualizationPDFdirectory);


    % Plot the cone pooling RF map within the entire input cone mosaic
    domainVisualizationLimits(1:2) = theMRGCmosaic.eccentricityDegs(1) + 0.5 * theMRGCmosaic.inputConeMosaic.sizeDegs(1) * [-1 1];
    domainVisualizationLimits(3:4) = theMRGCmosaic.eccentricityDegs(2) + 0.5 * theMRGCmosaic.inputConeMosaic.sizeDegs(2) * [-1 1];

    theMRGCmosaic.visualizeCenterSurroundConePoolingMap(theTargetRGCindex, ...
            'minConeWeightForVisualizingRFcenterPooling', minCenterConeWeight, ...
            'minConeWeightForVisualizingRFsurroundPooling', minSurroundConeWeight, ...
            'minSurroundConeWeightRelativity', 'center', ...
            'spatialSupportTickSeparationArcMin', spatialSupportTickSeparationArcMin, ...
            'figNo', figNo+2, ...
            'figPos', figPos, ...
            'plotTitle', sprintf('min surround weight: %2.5f', minSurroundConeWeight), ...
            'withCustomFigureFormat', '1x1 giant rectangular-wide mosaic', ...
            'domainVisualizationLimits', domainVisualizationLimits, ...
            'domainVisualizationTicks', domainVisualizationTicks, ...
            'exportToFigurePDFsDirWithPDFFileName', sprintf('RFmap%dwithinFullMosaic_minSurroundWeight_%2.4f.pdf', theTargetRGCindex, minSurroundConeWeight), ...
            'pdfExportSubDir', exportVisualizationPDFdirectory);


    % Include all surround cones
    minSurroundConeWeight = mRGCMosaic.minSurroundWeightForInclusionInComputing;
    
    theMRGCmosaic.visualizeCenterSurroundConePoolingMap(theTargetRGCindex, ...
            'minConeWeightForVisualizingRFcenterPooling', minCenterConeWeight, ...
            'minConeWeightForVisualizingRFsurroundPooling', minSurroundConeWeight, ...
            'minSurroundConeWeightRelativity', 'center', ...
            'spatialSupportTickSeparationArcMin', spatialSupportTickSeparationArcMin, ...
            'figNo', figNo+3, ...
            'figPos', figPos, ...
            'plotTitle', sprintf('min surround weight: %2.5f', minSurroundConeWeight), ...
            'withCustomFigureFormat', '1x1 giant rectangular-wide mosaic', ...
            'domainVisualizationLimits', domainVisualizationLimits, ...
            'domainVisualizationTicks', domainVisualizationTicks, ...
            'exportToFigurePDFsDirWithPDFFileName', sprintf('RFmap%dwithinFullMosaic_minSurroundWeight_%2.4f.pdf', theTargetRGCindex, minSurroundConeWeight), ...
            'pdfExportSubDir', exportVisualizationPDFdirectory);



    % Generate a video that displays cone pooling RF maps for several
    % mRGCs positioned within a desired ROI within the mRGC mosaic
    p = getpref('isetbio');
    figureDir = fullfile(p.rgcResources.figurePDFsDir, exportVisualizationPDFdirectory);

    % The video specs
    theVideoFileName = sprintf('%s/allConePoolingRFmaps',figureDir);
	videoOBJ = VideoWriter(theVideoFileName, 'MPEG-4'); 
	videoOBJ.FrameRate = 30;
	videoOBJ.Quality = 100;
	videoOBJ.open();

    % The desired ROI
    theROI = regionOfInterest(...
        'geometryStruct', struct(...
            'units', 'degs', ...
            'shape', 'rect', ...
            'center', theMRGCmosaic.eccentricityDegs, ...
            'width', theMRGCmosaic.sizeDegs(1), ...
            'height', 0.1, ...
            'rotation', 0.0...
        ));

    visualizedMRGCindices = theROI.indicesOfPointsInside(theMRGCmosaic.rgcRFpositionsDegs);
    [~,idx] = sort(sqrt(sum(theMRGCmosaic.rgcRFpositionsDegs(visualizedMRGCindices,:).^2,2)), 'ascend');
    visualizedMRGCindices = visualizedMRGCindices(idx);

    domainVisualizationLimits(1:2) = theMRGCmosaic.eccentricityDegs(1) + 1.1*theMRGCmosaic.sizeDegs(1)/2 * [-1 1];
    domainVisualizationLimits(3:4) = theMRGCmosaic.eccentricityDegs(2) + 1.1*theMRGCmosaic.sizeDegs(2)/2 * [-1 1];


    % Include surround cones whose pooling weights are >= 0.001
    minSurroundConeWeight = 0.001;

    % Generate the video
    hFig = figure(500); clf;
    set(hFig, 'Position', [10 10 1024 1024]);
    ax = subplot(1,1,1);

    for iRGC = 1:numel(visualizedMRGCindices)

        domainVisualizationTicks.x = [domainVisualizationLimits(1) theMRGCmosaic.rgcRFpositionsDegs(visualizedMRGCindices(iRGC),1) domainVisualizationLimits(2)];
        domainVisualizationTicks.y = [domainVisualizationLimits(3) theMRGCmosaic.rgcRFpositionsDegs(visualizedMRGCindices(iRGC),2) domainVisualizationLimits(4)];

        theMRGCmosaic.visualizeCenterSurroundConePoolingMap(visualizedMRGCindices(iRGC), ...
            'minConeWeightForVisualizingRFcenterPooling', minCenterConeWeight, ...
            'minConeWeightForVisualizingRFsurroundPooling', minSurroundConeWeight, ...
            'minSurroundConeWeightRelativity', 'center', ...
            'spatialSupportTickSeparationArcMin', spatialSupportTickSeparationArcMin, ...
            'scaleBarDegs', scaleBarDegs, ...
            'doNotLabelScaleBar', true, ...
            'plotTitle', sprintf('RGC #%d', visualizedMRGCindices(iRGC)), ...
            'axesToRenderIn', ax, ...
            'withCustomFigureFormat', '1x1 giant rectangular-wide mosaic', ...
            'domainVisualizationLimits', domainVisualizationLimits, ...
            'domainVisualizationTicks', domainVisualizationTicks);
        drawnow;
		videoOBJ.writeVideo(getframe(hFig));
    end
    videoOBJ.close();

end
