function coVisualizeRetinalStimulusConeAndMRGCmosaic(figNo, theMRGCMosaic, theStimulusRetinalImage)

    domainVisualizationLimits(1:2) = theMRGCMosaic.inputConeMosaic.eccentricityDegs(1) + theMRGCMosaic.inputConeMosaic.sizeDegs(1) * 0.51*[-1 1];
    domainVisualizationLimits(3:4) = theMRGCMosaic.inputConeMosaic.eccentricityDegs(2) + theMRGCMosaic.inputConeMosaic.sizeDegs(2) * 0.51*[-1 1];
    
    hFig = figure(figNo); clf;
    set(hFig, 'Position', [10 10 1900 1050], 'Color', [1 1 1]);
    ax = subplot('Position', [0.05 0.05 0.94 0.94]);

    theMRGCMosaic.visualize(...
        'figureHandle', hFig, ...
        'axesHandle', ax, ...
        'identifyInputCones', ~true, ...
        'identifyPooledCones', ~true, ...
        'identifiedConeAperture', 'lightCollectingAreaCharacteristicDiameter', ...
        'centerSubregionContourSamples', 24, ...
        'backgroundColor', [1 1 1], ...
        'domainVisualizationLimits', domainVisualizationLimits, ...
        'domainVisualizationTicks', struct('x', -30:30, 'y', -30:30), ...
        'plotTitle', '');
    hold(ax, 'on');

    theMRGCMosaic.inputConeMosaic.visualize(...
        'figureHandle', hFig, ...
        'axesHandle', ax, ...
        'conesAlpha', 0.1, ...
        'conesEdgeAlpha', 1.0, ...
        'clearAxesBeforeDrawing', false, ...
        'withSuperimposedOpticalImage', theStimulusRetinalImage, ...
        'superimposedOIAlpha', 0.4, ...
        'domainVisualizationLimits', domainVisualizationLimits, ...
        'domainVisualizationTicks', struct('x', -30:30, 'y', -30:30), ...
        'plotTitle', '');

    NicePlot.exportFigToPDF('theRetinalOpticalImage.pdf', hFig, 300);
end