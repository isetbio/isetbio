function [theInputConeMosaic, extraDegsToSupportRGCSurrounds] = inputConeMosaic(paramsStruct)

    % Set cone aperture modifiers
    % Use a Gaussian cone aperture with
    % sigma equal to 0.204 x inner segment diameter (cone diameter)
    sigmaGaussian = 0.204;  % From McMahon et al, 2000
    coneApertureModifiers = struct(...
            'smoothLocalVariations', true, ...
            'sigma',  sigmaGaussian, ...
            'shape', 'Gaussian');

    % Brian wants to be able to use positionDegs insead of eccentricityDegs
    if ~isempty(paramsStruct.eccentricityDegs)
        % eccentricityDegs is always used if present, for
        % historical reasons 
        paramsStruct.eccentricityDegs = paramsStruct.eccentricityDegs;
    elseif (isfield(paramsStruct, 'positionDegs')) && (~isempty(paramsStruct.positionDegs))
        % Use positionDegs if available but there is not
        % eccentricityDegs
        paramsStruct.eccentricityDegs = paramsStruct.positionDegs;
    else                
        % Default
        paramsStruct.eccentricityDegs = [0,0];
    end


    % Compute the extra degs for supporting the surrounds
    extraDegsToSupportRGCSurrounds = RGCMosaicConstructor.compute.extraDegsToSupportRGCSurrounds(...
        paramsStruct.eccentricityDegs, paramsStruct.sizeDegs);

    % Generate cone mosaic
    if (~isempty(paramsStruct.customLMSconeDensities))
        % Custom LMS cone densities
        theInputConeMosaic = cMosaic(...
            'sourceLatticeSizeDegs', paramsStruct.sourceLatticeSizeDegs, ...
            'eccentricityDegs', paramsStruct.eccentricityDegs, ...
            'sizeDegs', paramsStruct.sizeDegs + extraDegsToSupportRGCSurrounds, ...
            'whichEye', paramsStruct.whichEye, ...
            'eccVaryingConeBlur', true, ...
            'customDegsToMMsConversionFunction', paramsStruct.customDegsToMMsConversionFunction, ...
            'customMMsToDegsConversionFunction', paramsStruct.customMMsToDegsConversionFunction, ...
            'overlappingConeFractionForElimination', 0.5, ...
            'rodIntrusionAdjustedConeAperture', true, ...
            'coneApertureModifiers', coneApertureModifiers, ...
            'randomSeed', paramsStruct.randomSeed, ...
            'coneDensities', paramsStruct.customLMSconeDensities);
    else
        % Default LMS cone densities
        theInputConeMosaic = cMosaic(...
            'sourceLatticeSizeDegs', paramsStruct.sourceLatticeSizeDegs, ...
            'eccentricityDegs', paramsStruct.eccentricityDegs, ...
            'sizeDegs', paramsStruct.sizeDegs + extraDegsToSupportRGCSurrounds, ...
            'whichEye', paramsStruct.whichEye, ...
            'eccVaryingConeBlur', true, ...
            'customDegsToMMsConversionFunction', paramsStruct.customDegsToMMsConversionFunction, ...
            'customMMsToDegsConversionFunction', paramsStruct.customMMsToDegsConversionFunction, ...
            'overlappingConeFractionForElimination', 0.5, ...
            'rodIntrusionAdjustedConeAperture', true, ...
            'coneApertureModifiers', coneApertureModifiers, ...
            'randomSeed', paramsStruct.randomSeed);
    end
end