function [stimulusIncrementRadiancePhotons, stimulusDecrementRadiancePhotons] = stimulusDifferentialSpectrum(wavelengthSupport, stimulusChromaticity)
	
% Generate stimulus scene
orientationsExamined = 0;
spatialFrequenciesExamined = 5;

resolutionDegs = 0.1/60;
[coneContrasts, totalContrast] = visualStimulusGenerator.coneContrastsFromChromaticity(stimulusChromaticity)

STFparamsStruct = struct(...
    'backgroundChromaticity', [0.301 0.301], ...
    'backgroundLuminanceCdM2', 50.0, ...
    'chromaticity', stimulusChromaticity, ...
    'coneFundamentalsOptimizedForStimPosition', false, ...
    'resolutionDegs', resolutionDegs, ...                       % to be determined separately for each optimization position
    'sfSupport', logspace(log10(0.01), log10(100), 20), ...
    'orientationDeltaDegs', 30, ...
    'spatialPhaseIncrementDegs', 30, ...
    'positionDegs', [0 0], ...                         % to be detemined based on each optimization position
    'sizeDegs', 0.5 ...                                % to be detemined separately for each optimization position;
    );

% Form stimParams struct
  stimParams = struct(...
    'backgroundChromaticity', STFparamsStruct.backgroundChromaticity, ...
    'backgroundLuminanceCdM2', STFparamsStruct.backgroundLuminanceCdM2, ...
    'contrast', totalContrast, ...
    'coneContrasts', coneContrasts, ...
    'sizeDegs', STFparamsStruct.sizeDegs, ...
    'positionDegs', STFparamsStruct.positionDegs, ...
    'resolutionDegs', STFparamsStruct.resolutionDegs, ...
    'spatialPhaseIncrementDegs', STFparamsStruct.spatialPhaseIncrementDegs, ...
    'orientationDegs', orientationsExamined(1), ...
    'spatialFrequencyCPD', spatialFrequenciesExamined(1), ...
    'coneMosaicModulationBasedResponse',  true ...
    );

% Generate presentation display
viewingDistanceMeters = 4;
thePresentationDisplay = visualStimulusGenerator.presentationDisplay(...
            wavelengthSupport, STFparamsStruct.resolutionDegs, ...
            viewingDistanceMeters);

theDriftingGratingSpatialModulationPatterns = ...
    visualStimulusGenerator.driftingGratingModulationPatterns(stimParams);

theDriftingGratingFrameScenes = visualStimulusGenerator.stimulusFramesScenes(...
              thePresentationDisplay, stimParams, theDriftingGratingSpatialModulationPatterns, ...
              'frameIndexToCompute', [], ...
              'validateScenes', ~true);
theDriftingGratingFrameScene = theDriftingGratingFrameScenes{1};

theNullStimFrameScenes = visualStimulusGenerator.stimulusFramesScenes(...
              thePresentationDisplay, stimParams, theDriftingGratingSpatialModulationPatterns*0, ...
              'frameIndexToCompute', [], ...
              'validateScenes', ~true)
theNullStim = theNullStimFrameScenes{1};


theLuminance = sceneGet(theDriftingGratingFrameScene, 'luminance');
[~,idx] = max(theLuminance(:));
[rowMax,colMax] = ind2sub(size(theLuminance),idx);
[~,idx] = min(theLuminance(:));
[rowMin,colMin] = ind2sub(size(theLuminance),idx);

stimRadiance = sceneGet(theDriftingGratingFrameScene, 'photons');
wavelengthSupport = sceneGet(theDriftingGratingFrameScene, 'wave');
nullRadiance = sceneGet(theNullStim, 'photons');

stimulusIncrementRadiancePhotons = squeeze(stimRadiance(rowMax,colMax,:)-nullRadiance(rowMax,colMax,:));
stimulusDecrementRadiancePhotons = squeeze(stimRadiance(rowMin,colMin,:)-nullRadiance(rowMax,colMax,:));
end
