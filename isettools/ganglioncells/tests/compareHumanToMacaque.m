function compareHumanToMacaque

    xRangeMMs = [-13 13];
    xRangeDegsHuman = RGCmodels.Watson.convert.rhoMMsToDegs(xRangeMMs);
    xRangeDegsMacaque = RGCMosaicConstructor.helper.convert.eccentricityInMacaqueRetina('MMsToDegs', xRangeMMs);

    densityLimits = [1e3 1e5*4];
    xRangeDegs = [-60 60];
    [eccMMsHuman, densHuman] = humanConeDensityData();
    [eccMMsMacaque, densMacaque] = macaqueConeDensityData();


    % Adjust human data based on peak density of cone mosaic
    c = cMosaic();
    mixConeSpacingMMs = min(c.coneRFspacingsMicrons)/1e3;
    isetbioMacConeDensityConesPerMM2 = RGCmodels.Watson.convert.spacingToDensityForHexGrid(mixConeSpacingMMs);
    f = isetbioMacConeDensityConesPerMM2 / max(densHuman);
    densHuman = densHuman * f;

    eccDegsHuman = RGCmodels.Watson.convert.rhoMMsToDegs(eccMMsHuman);
    eccDegsMacaque = RGCMosaicConstructor.helper.convert.eccentricityInMacaqueRetina('MMsToDegs',  eccMMsMacaque);

    % Plot as a function of eccentricity
    figNo = 10;
	ff = PublicationReadyPlotLib.figureComponents('1x1 standard figure');
    ff.axisFontSize = 24;
	hFig = figure(figNo); clf;
    theAxes = PublicationReadyPlotLib.generatePanelAxes(hFig,ff);
    ax = theAxes{1,1};


    humanDensityFaceColor = [0. 0. 0.];
    humanDensityEdgeColor = [0.0 0.0 0.0];

    macaqueDensityFaceColor = [0.25 0.8 0.25];
    macaqueDensityEdgeColor = [0.0 0.6 0.0];

    p1 = scatter(ax, eccMMsHuman, densHuman, (ff.markerSize*0.8)^2, ...
            		'LineWidth', ff.lineWidth/2, ...
                    'Marker', 's', ...
            		'MarkerFaceColor', humanDensityFaceColor , ...
            		'MarkerEdgeColor', humanDensityEdgeColor, ...
            		'MarkerFaceAlpha', 0.5, ...
            		'MarkerEdgeAlpha', 1.0);

    hold(ax, 'on');
    p2 = scatter(ax, eccMMsMacaque, densMacaque, (ff.markerSize*0.8)^2, ...
            		'LineWidth', ff.lineWidth/2, ...
                    'Marker', 's', ...
            		'MarkerFaceColor', macaqueDensityFaceColor, ...
            		'MarkerEdgeColor', macaqueDensityEdgeColor, ...
            		'MarkerFaceAlpha', 0.5, ...
            		'MarkerEdgeAlpha', 1.0);

    legend(ax, [p1 p2], {'human', 'macaque'});
    
    set(ax, 'YScale', 'log', 'YLim', densityLimits, 'YTick', [1e3 1e3*3 1e4 1e4*3 1e5 1e5*3], 'YTickLabel', {'1k', '3k', '10k', '30K', '100k', '300K'});
    set(ax, 'XLim', xRangeMMs, 'XTick', [-15 -12.5 -10 -7.5 -5 -2.5 0 2.5 5 7.5 10 12.5 15])
    xlabel(ax,'(temporal)          eccentricity (mm)              (nasal)');
    ylabel('cone density (cones/mm^2)')
    grid(ax, 'on');
    title(ax, 'Grunert and Martin (2020)');

    % Finalize figure using the Publication-Ready format
	ff.legendBox = 'on';
    PublicationReadyPlotLib.applyFormat(ax,ff);
    %PublicationReadyPlotLib.offsetAxes(ax, ff, xLims, yLims);
    NicePlot.exportFigToPDF('HumanVsMacaqueEccentricityInMMs.pdf', hFig, 300);

    % Plot as a function of eccentricity
    figNo = 11;
	hFig = figure(figNo); clf;
    theAxes = PublicationReadyPlotLib.generatePanelAxes(hFig,ff);
    ax = theAxes{1,1};


    p1 = scatter(ax, eccDegsHuman, densHuman, (ff.markerSize*0.8)^2, ...
                    'Marker', 's', ...
            		'LineWidth', ff.lineWidth/2, ...
            		'MarkerFaceColor', humanDensityFaceColor , ...
            		'MarkerEdgeColor', humanDensityEdgeColor , ...
            		'MarkerFaceAlpha', 0.5, ...
            		'MarkerEdgeAlpha', 1.0);

    hold(ax, 'on');
    p2 = scatter(ax, eccDegsMacaque, densMacaque, (ff.markerSize*0.8)^2, ...
                    'Marker', 's', ...
            		'LineWidth', ff.lineWidth/2, ...
            		'MarkerFaceColor', macaqueDensityFaceColor, ...
            		'MarkerEdgeColor', macaqueDensityEdgeColor, ...
            		'MarkerFaceAlpha', 0.5, ...
            		'MarkerEdgeAlpha', 1.0);

    legend(ax, [p1 p2], {'human', 'macaque'})
    set(ax, 'YScale', 'log', 'YLim', densityLimits, 'YTick', [1e3 1e3*3 1e4 1e4*3 1e5 1e5*3], 'YTickLabel', {'1k', '3k', '10k', '30K', '100k', '300K'});
    set(ax, 'XLim', xRangeDegs, 'XTick', -80:10:80)
    xlabel(ax,'(temporal)         eccentricity (degs)               (nasal)');
    ylabel('cone density (cones/mm^2)')
    grid(ax, 'on');
    title(ax, 'Grunert and Martin (2020)');

    % Finalize figure using the Publication-Ready format
	ff.legendBox = 'on';
    PublicationReadyPlotLib.applyFormat(ax,ff);
    %PublicationReadyPlotLib.offsetAxes(ax, ff, xLims, yLims);
    NicePlot.exportFigToPDF('HumanVsMacaqueEccentricityInDegs.pdf', hFig, 300);

end


function [ecc, dens] = humanConeDensityData()
% These are scanned from 
d = [ ...
-2.334085778781E1	7.200037468716E3; ...
-2.090293453725E1	5.597515933172E3; ...
-1.918735891648E1	4.934476766280E3; ...
-1.765237020316E1	4.559749207479E3; ...
-1.593679458239E1	5.247095931890E3; ...
-1.404063205418E1	5.495657149022E3; ...
-1.241534988713E1	5.847552655152E3; ...
-1.106094808126E1	6.320952615034E3; ...
-9.796839729120E0	6.317822065752E3; ...
-7.539503386005E0	5.836389920839E3; ...
-7.268623024831E0	6.021625727097E3; ...
-6.365688487585E0	6.211201893735E3; ...
-5.462753950339E0	6.307100519997E3; ...
-3.566591422122E0	6.605875423710E3; ...
-2.753950338600E0	8.894876289338E3; ...
-1.941309255079E0	1.090191417850E4; ...
-1.309255079007E0	1.357388362422E4; ...
-7.674943566591E-1	1.946215293436E4; ...
-4.063205417607E-1	2.580295649061E4; ...
-4.966139954853E-1	4.065467447990E4; ...
-4.966139954853E-1	5.224382726593E4; ...
-3.160270880361E-1	7.147593924648E4; ...
-4.063205417607E-1	9.042571558717E4; ...
-3.160270880361E-1	1.143913808687E5; ...
-2.257336343115E-1	1.516763936522E5; ...
1.354401805869E-1	1.296518487028E5; ...
2.257336343115E-1	9.040332044873E4; ...
1.354401805869E-1	6.403664441797E4; ...
4.514672686230E-2	4.983327585365E4; ...
2.257336343115E-1	4.327316619260E4; ...
4.063205417607E-1	3.641684738883E4; ...
4.063205417607E-1	2.924108016584E4; ...
7.674943566591E-1	2.499505697810E4; ...
1.038374717833E0	1.884811703452E4; ...
1.489841986456E0	1.253686141712E4; ...
2.573363431151E0	9.016562837146E3; ...
3.656884875846E0	5.995898838139E3; ...
4.650112866817E0	5.123980217906E3; ...
5.914221218962E0	4.177256528114E3; ...
7.088036117381E0	4.587098393184E3; ...
8.623024830700E0	4.238750986910E3; ...
1.015801354402E1	4.236201963930E3; ...
1.088036117381E1	3.677762566933E3; ...
1.232505643341E1	3.675680962139E3; ...
1.367945823928E1	3.673730527688E3; ...
1.494356659142E1	3.558578829281E3; ...
1.629796839729E1	4.031886772939E3; ...
1.738148984199E1	3.726361744612E3; ...
1.819413092551E1	4.426212875703E3; ...
1.954853273138E1	5.256387538065E3];

% Make temporal eccentricity negative
ecc = -d(:,1);
dens = d(:,2);
end


function [ecc, dens] = macaqueConeDensityData()
d = [ ...
-2.005568950434E1	3.436585668749E3; ...
-1.896878400580E1	3.953957773222E3; ...
-1.795677128897E1	3.771353123492E3; ...
-1.694347835364E1	3.950830044684E3; ...
-1.593103889731E1	3.888023178420E3; ...
-1.470032218832E1	4.202023698942E3; ...
-1.375850811872E1	4.686111009468E3; ...
-1.267224272943E1	5.144633435760E3; ...
-1.144216612969E1	5.305436237535E3; ...
-1.050120553908E1	5.558076535535E3; ...
-9.343034544562E0	5.913965494681E3; ...
-8.545885164401E0	6.595647085928E3; ...
-7.459833144857E0	7.128720877488E3; ...
-6.229543175369E0	7.467340186558E3; ...
-5.431753685962E0	8.727855530602E3; ...
-4.200396867732E0	9.885535265281E3; ...
-3.836174707150E0	1.192314356304E4; ...
-3.183903386178E0	1.309200861070E4; ...
-2.965839503275E0	1.415493156393E4; ...
-2.602470821687E0	1.603790755740E4; ...
-2.239315509847E0	1.788957300805E4; ...
-2.021251626944E0	1.934200390228E4; ...
-1.730001920328E0	2.226082910515E4; ...
-1.583630272900E0	2.522424001957E4; ...
-1.145155439862E0	3.501751840024E4; ...
-9.979303134402E-1	4.223891674118E4; ...
-7.785862120469E-1	5.015800343327E4; ...
-4.147907909617E-1	5.863480680152E4; ...
-1.958734290652E-1	6.748506053736E4; ...
-1.930996223355E-1	8.268890853675E4; ...
-1.903258156059E-1	1.013180627024E5; ...
-1.875520088762E-1	1.241442173010E5; ...
1.043378069857E-1	1.497370774717E5; ...
1.075383532123E-1	1.892972460874E5; ...
1.726161264856E-1	1.112631838093E5; ...
2.400409669917E-1	7.766457362486E4; ...
4.540508246741E-1	6.239630309660E4; ...
5.961550771332E-1	5.172283912618E4; ...
5.933812704035E-1	4.221266178696E4; ...
9.524825570231E-1	3.498882934667E4; ...
1.167345893699E0	2.992374605049E4; ...
1.382209230375E0	2.559189874066E4; ...
1.597285936800E0	2.223190714572E4; ...
2.028719568140E0	1.842685080819E4; ...
2.388460964005E0	1.600666229140E4; ...
2.530991955960E0	1.368987885046E4; ...
3.035824780763E0	1.226874231149E4; ...
3.251328226684E0	1.099637601167E4; ...
3.611496362046E0	9.855407138746E3; ...
4.043356732882E0	8.427995513283E3; ...
4.620521902405E0	7.552877856403E3; ...
5.341925021870E0	6.559953378013E3; ...
6.135660486056E0	5.697400770475E3; ...
7.146392984403E0	4.947843612610E3; ...
8.445601382636E0	4.036039520258E3; ...
9.599931721681E0	3.241393385297E3; ...
1.061087758978E1	2.859292590148E3; ...
1.176627477756E1	2.482980133016E3; ...
1.270467493119E1	2.156377110804E3; ...
1.400452343867E1	1.843432108894E3; ...
1.494441718053E1	1.786044423311E3];

% Make temporal eccentricity negative
ecc = -d(:,1);
dens = d(:,2);

end
