function testComputeRetinalConePoolingRF()

    % Struct with the various optics params
    opticsParams = struct(...
            'rfPositionEccDegs', [-0.2 -0.2], ...  % (x,y) eccentricity for the cone pooling RF, in degrees
            'ZernikeDataBase', 'Artal2012', ...
            'examinedSubjectRankOrder', 41 , ...
            'analyzedEye', 'right eye', ...
            'subjectRankingEye', 'right eye', ...
            'pupilDiameterMM', 3.0, ...
            'wavefrontSpatialSamples', 401 ...
            );

    % The cone mosaic whose cones are to be pooled by the retinal RGC RF
    % Use a Gaussian cone aperture with 
    % sigma equal to 0.204 x inner segment diameter (cone diameter)
    sigmaGaussian = 0.204;  % From McMahon et al, 2000

    % Set cone aperture modifiers
    coneApertureModifiers = struct(...
        'smoothLocalVariations', true, ...
        'sigma',  sigmaGaussian, ...
        'shape', 'Gaussian');

    theConeMosaic = cMosaic(...
        'whichEye', opticsParams.analyzedEye, ...
        'eccentricityDegs', [0 0], ...
        'sizeDegs', [0.5 0.5], ...
        'rodIntrusionAdjustedConeAperture', true, ...
        'customDegsToMMsConversionFunction', @RGCmodels.Watson.convert.rhoDegsToMMs, ...
        'customMMsToDegsConversionFunction', @RGCmodels.Watson.convert.rhoMMsToDegs);

    
    targetVisualRFDoGparams = struct(...
        'conesNumPooledByTheRFcenter', 2, ...
        'surroundToCenterRcRatio', 6.7 ...
        );

    % Instantiate the RetinaToVisualFieldTransformer
    xFormer = RetinaToVisualFieldTransformer(theConeMosaic, opticsParams, targetVisualRFDoGparams);
end
