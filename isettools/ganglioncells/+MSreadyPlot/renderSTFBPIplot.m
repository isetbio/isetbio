function renderSTFBPIplot(ax, theLconeCenterBPIscatterData, ...
    theMconeCenterBPIscatterData, plotTitle, ff, varargin)

    p = inputParser;
    p.addParameter('noXLabel', false, @islogical);
    p.addParameter('noYLabel', false, @islogical);
    p.addParameter('gridless', false, @islogical);
    p.addParameter('opticsString', '', @ischar);
    p.addParameter('superimposeLeeShapleyData', false, @islogical);
    p.addParameter('showLegends', false, @islogical);
    p.addParameter('outlineLastPoint', false, @islogical);

    p.parse(varargin{:});
    
    noXLabel = p.Results.noXLabel;
    noYLabel = p.Results.noYLabel;
    gridless = p.Results.gridless;
    superimposeLeeShapleyData = p.Results.superimposeLeeShapleyData;
    opticsString = p.Results.opticsString;
    showLegends = p.Results.showLegends;
    outlineLastPoint = p.Results.outlineLastPoint;

    plot(ax, [0 1], [0.5 1], 'k-', 'LineWidth', ff.lineWidth);
    hold(ax, 'on');

    thePlotHandles = [];
    theLegends = {};


    if (~isempty(theLconeCenterBPIscatterData))
        thePlotHandles(numel(thePlotHandles)+1) = scatter(ax, theLconeCenterBPIscatterData(:,1), theLconeCenterBPIscatterData(:,2), (ff.markerSize-4)^2, 'o', ...
            'MarkerFaceColor', [1 0 0], 'MarkerFaceAlpha', 0.2, 'MarkerEdgeColor', [0 0 0], 'MarkerEdgeAlpha', 0.2);
        if (~isempty(opticsString))
            theLegends{numel(theLegends)+1} = sprintf('%s, L-center mRGCs', opticsString);
        else
            theLegends{numel(theLegends)+1} = sprintf('%s, L-center mRGCs', 'ISETBio');
        end
    end

    
    nLcenterModelCells = size(theLconeCenterBPIscatterData,1);
    nMcenterModelCells = size(theMconeCenterBPIscatterData,1);

    if (~isempty(theMconeCenterBPIscatterData))
        thePlotHandles(numel(thePlotHandles)+1) = scatter(ax, theMconeCenterBPIscatterData(:,1), theMconeCenterBPIscatterData(:,2), (ff.markerSize-4)^2, 'o', ...
            'MarkerFaceColor', [0 0.8 0], 'MarkerFaceAlpha', 0.2, 'MarkerEdgeColor', [0 0 0], 'MarkerEdgeAlpha', 0.2);
        if (~isempty(opticsString))
            theLegends{numel(theLegends)+1} = sprintf('%s, M-center mRGCs', opticsString);
        else
            theLegends{numel(theLegends)+1} = sprintf('%s, M-center mRGCs', 'ISETBio');
        end
    end

    if (outlineLastPoint)
        if (~isempty(theLconeCenterBPIscatterData))
            thePlotHandles(numel(thePlotHandles)+1) = scatter(ax, theLconeCenterBPIscatterData(end,1), theLconeCenterBPIscatterData(end,2), (ff.markerSize-6)^2, 'o', ...
                'MarkerFaceColor', [1 0 0], 'MarkerFaceAlpha', 0.5, 'MarkerEdgeColor', [0 0 0], 'MarkerEdgeAlpha', 1.0, 'LineWidth', ff.lineWidth);
        end

        if (~isempty(theMconeCenterBPIscatterData))
            thePlotHandles(numel(thePlotHandles)+1) = scatter(ax, theMconeCenterBPIscatterData(end,1), theMconeCenterBPIscatterData(end,2), (ff.markerSize-6)^2, 'o', ...
                'MarkerFaceColor', [0 0.8 0], 'MarkerFaceAlpha', 0.5, 'MarkerEdgeColor', [0 0 0], 'MarkerEdgeAlpha', 1.0, 'LineWidth', ff.lineWidth);
        end
    end


    if (superimposeLeeShapleyData)
        [lCenterData, mCenterData] = loadLeeShapleyData();
        thePlotHandles(numel(thePlotHandles)+1) = plot(ax, lCenterData.x, lCenterData.y, 's', 'MarkerEdgeColor', [0.7 0 0], 'MarkerFaceColor', [0.7 0 0], 'MarkerSize', 8);
        thePlotHandles(numel(thePlotHandles)+1) = plot(ax, mCenterData.x, mCenterData.y, 's', 'MarkerEdgeColor', [0 0.5 0], 'MarkerFaceColor', [0 0.5 0], 'MarkerSize', 8);
        theLegends{numel(theLegends)+1} = 'Lee-Shapley (2012), L-center mRGCs';
        theLegends{numel(theLegends)+1} = 'Lee-Shapley (2012), M-center mRGCs';
    end

    set(ax, 'XLim', [1*ff.axisOffsetFactor 1.01], 'YLim', [1*ff.axisOffsetFactor 1.01]);
    ticks = 0:0.2:1;
    set(ax, 'XTick', ticks, 'YTick', ticks, 'XTickLabel', sprintf('%0.1f\n', ticks), 'YTickLabel', sprintf('%0.1f\n', ticks));
    xtickangle(ax, 0);

    if (showLegends)
        legend(ax, thePlotHandles, theLegends, ...
            'Position', [0.1 0.20 1 0.15], 'NumColumns', 1, ...
            'FontSize', ff.legendFontSize-6, 'Box', 'on', 'Color', [0.95 0.95 0.95], 'EdgeColor', [0.3 0.3 0.3]);

        text(ax, 0.62, 0.23, sprintf('n_L: %d, n_M: %d',nLcenterModelCells, nMcenterModelCells), 'FontSize', ff.titleFontSize);
    else
        text(ax, 0.62, 0.05, sprintf('n_L: %d, n_M: %d',nLcenterModelCells, nMcenterModelCells), 'FontSize', ff.titleFontSize);
    end

    axis(ax, 'square');
    if (~gridless)
        grid(ax, 'on');
        box(ax, 'off');
    else
        grid(ax, 'off');
        box(ax, 'on');
    end

    set(ax, 'TickDir', 'both');
    if (~noXLabel)
        xlabel(ax, 'BPI achromatic gratings', 'FontAngle', ff.axisFontAngle);
    end

    if (~noYLabel)
        ylabel(ax, 'BPI cone isolating gratings', 'FontAngle', ff.axisFontAngle);
    end

    % Font size
    set(ax, 'FontSize', ff.fontSize);

    % axis color and width
    set(ax, 'XColor', ff.axisColor, 'YColor', ff.axisColor, 'LineWidth', ff.axisLineWidth);
    
    
    % plot title
    if (~isempty(plotTitle))
        title(ax, plotTitle, 'Color', ff.titleColor, 'FontSize', ff.titleFontSize, 'FontWeight', ff.titleFontWeight);
    end

    drawnow;
end

function [lCenterData, mCenterData] = loadLeeShapleyData()

    % Lcenter midget data
    xy = [ ...
    1.898891775914E-1	5.161017282784E-1; ...
    2.909104628427E-1	7.980624122410E-1; ...
    4.351829980447E-1	7.559905777988E-1; ...
    3.045352545175E-1	8.937344986418E-1; ...
    2.647074262168E-1	9.981267141714E-1; ...
    2.821001141687E-1	1.002992008189E0; ...
    3.622938073304E-1	9.954332506594E-1; ...
    3.810102620632E-1	9.953873207092E-1; ...
    3.970529375484E-1	9.953479521804E-1; ...
    4.171062819049E-1	9.952987415194E-1; ...
    4.411801372649E-1	9.989206461688E-1; ...
    4.986631103762E-1	9.975525897931E-1; ...
    4.665843208273E-1	1.000085298479E0; ...
    4.799499363542E-1	9.988255055575E-1; ...
    5.307451806359E-1	9.962468669212E-1; ...
    5.894928677349E-1	9.678818419222E-1; ...
    6.818235502539E-1	9.995571040510E-1; ...
    7.860910987756E-1	9.956202511712E-1; ...
    8.288781281577E-1	9.979692400562E-1; ...
    8.569560909675E-1	9.991273309450E-1; ...
    9.411834179757E-1	1.000147631983E0; ...
    1.005350839206E0	9.987631720536E-1; ...
    8.943824390116E-1	9.965814994160E-1]; 

    xy(xy<0) = 0;
    xy(xy>1) = 1;
    lCenterData.x = xy(:,1);
    lCenterData.y = xy(:,2);

    % M-center midget data
    xy = [ ...
    1.203200661391E-2	9.975197826857E-1; ...
    -1.377898507933E-4	9.460159048856E-1; ...
    2.371953860084E-3	8.846600527538E-1; ...
    6.644095376822E-2	8.464660183982E-1; ...
    4.703226907077E-2	5.876179415509E-1; ...
    1.223770717688E-1	7.665741506240E-1; ...
    1.956501056389E-1	6.706888180255E-1; ...
    2.411699670617E-1	6.951169901447E-1; ...
    5.526685301104E-1	6.955795703581E-1; ...
    2.229554610711E-1	8.828917496686E-1; ...
    1.414708082359E-1	9.076315893075E-1; ...
    1.695487710458E-1	9.087896801963E-1; ...
    2.003595658964E-1	9.320269543194E-1; ...
    2.111071742582E-1	9.516324816608E-1; ...
    3.566837919767E-1	8.972875083658E-1; ...
    2.820377806648E-1	9.796792777187E-1; ...
    3.301559649883E-1	9.758802146897E-1; ...
    3.435871947299E-1	9.991601380523E-1; ...
    4.116340564020E-1	9.486864034224E-1; ...
    5.802166581368E-1	9.985794522525E-1; ...
    6.671177643925E-1	9.995931918691E-1; ...
    7.005367242759E-1	9.982841882866E-1; ...
    6.777603900109E-1	9.799351731559E-1; ...
    7.647041455061E-1	9.968997283572E-1; ...
    8.462576932667E-1	9.979265908166E-1; ...
    9.264645092713E-1	9.952757765442E-1; ...
    9.892950408777E-1	9.938945973256E-1; ...
    5.120320066139E-1	9.975197826857E-1; ...
    4.010668871304E-3	9.975394669501E-1];

    xy(xy<0) = 0;
    xy(xy>1) = 1;

    mCenterData.x = xy(:,1);
    mCenterData.y = xy(:,2);

end
