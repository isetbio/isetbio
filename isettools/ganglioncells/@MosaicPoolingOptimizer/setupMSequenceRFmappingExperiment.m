function [stimParams, thePresentationDisplay] = setupMSequenceRFmappingExperiment(...
    wavelengthSupport, stimSizeDegs, rfPixelsAcross, optimalRetinalPixelSizeDegs, ...
    ternaryInsteadOfBinaryMsequence, mSequenceBitLength, stimulusChromaticity)

    rfPixelSizeDegs = max(stimSizeDegs(:))/rfPixelsAcross;
    rfPixelRetinalPixelsWithin = max([1 floor(rfPixelSizeDegs/optimalRetinalPixelSizeDegs)]);
    pixelSizeDegs = rfPixelSizeDegs/rfPixelRetinalPixelsWithin;
    
    fprintf('\nTo probe RFs with a rfPixel size of %2.3f degs\nusing a patch size of %2.3f degs with %d x %d pixels\neach rfPixel will contain %d retinal pixels (retinal res of :%2.3f arc min, optimal retinal res: %2.3f arc min) will be employed', ...
        rfPixelSizeDegs, stimSizeDegs(1), rfPixelsAcross, rfPixelsAcross, rfPixelRetinalPixelsWithin, pixelSizeDegs*60, optimalRetinalPixelSizeDegs*60);
    
    % Generate a presentation display with a desired resolution
    viewingDistanceMeters = 4;

    thePresentationDisplay = rfMappingStimulusGenerator.presentationDisplay(...
            wavelengthSupport, pixelSizeDegs, ...
            viewingDistanceMeters);

    % Cone contrasts and overall contrast for desired stimulus chromaticity
    [coneContrasts, contrast] = MosaicPoolingOptimizer.contrastForChromaticity(stimulusChromaticity);

    % Stim params for the RF mapping
    stimParams = struct(...
            'backgroundLuminanceCdM2', 50.0, ...
            'backgroundChromaticity', [0.301 0.301], ...
            'coneContrasts', coneContrasts, ...
            'contrast', contrast, ...
            'rfPixelsAcross', rfPixelsAcross, ...
            'rfPixelRetinalPixelsWithin', rfPixelRetinalPixelsWithin, ...
            'pixelSizeDegs', pixelSizeDegs, ...
            'stimSizeDegs', max(stimSizeDegs), ...
            'ternaryInsteadOfBinaryMsequence', ternaryInsteadOfBinaryMsequence, ...
            'mSequenceBitLength', mSequenceBitLength, ...
            'wavelengthSupport', displayGet(thePresentationDisplay, 'wave'), ...
            'viewingDistanceMeters', displayGet(thePresentationDisplay, 'viewing distance') ...
            );

end