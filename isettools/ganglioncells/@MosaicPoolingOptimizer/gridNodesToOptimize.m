function arbitraryNodesToCompute = gridNodesToOptimize()
    arbitraryNodesToCompute = {};

    s = input('Compute all nodes (1) or speficic ones (2):');
    if (s == 1)
        return;
    else

        % Bad nodes
        arbitraryNodesToCompute{numel(arbitraryNodesToCompute)+1} = struct(...
                'number', 23, ...
                'coneType', [cMosaic.MCONE_ID]);

        arbitraryNodesToCompute{numel(arbitraryNodesToCompute)+1} = struct(...
                'number', 22, ...
                'coneType', [cMosaic.LCONE_ID cMosaic.MCONE_ID]);

        arbitraryNodesToCompute{numel(arbitraryNodesToCompute)+1} = struct(...
                'number', 21, ...
                'coneType', [cMosaic.MCONE_ID]);

        arbitraryNodesToCompute{numel(arbitraryNodesToCompute)+1} = struct(...
                'number', 16, ...
                'coneType', [cMosaic.LCONE_ID]);

        arbitraryNodesToCompute{numel(arbitraryNodesToCompute)+1} = struct(...
                'number', 15, ...
                'coneType', [cMosaic.LCONE_ID]);

        arbitraryNodesToCompute{numel(arbitraryNodesToCompute)+1} = struct(...
                'number', 6, ...
                'coneType', [cMosaic.MCONE_ID]);
    end
end