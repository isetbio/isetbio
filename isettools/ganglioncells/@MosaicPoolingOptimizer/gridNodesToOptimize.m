function arbitraryNodesToCompute = gridNodesToOptimize()
    arbitraryNodesToCompute = {};

    s = input('Compute all nodes (1) or speficic ones (2):');
    if (s == 1)
        return;
    else

        % Bad nodes
         arbitraryNodesToCompute{numel(arbitraryNodesToCompute)+1} = struct(...
                'number', 12, ...
                'coneType', [cMosaic.MCONE_ID]);

         arbitraryNodesToCompute{numel(arbitraryNodesToCompute)+1} = struct(...
                'number', 11, ...
                'coneType', [cMosaic.LCONE_ID]);

         arbitraryNodesToCompute{numel(arbitraryNodesToCompute)+1} = struct(...
                'number', 9, ...
                'coneType', [cMosaic.LCONE_ID]);

          arbitraryNodesToCompute{numel(arbitraryNodesToCompute)+1} = struct(...
                'number', 7, ...
                'coneType', [cMosaic.LCONE_ID]);

          arbitraryNodesToCompute{numel(arbitraryNodesToCompute)+1} = struct(...
                'number', 4, ...
                'coneType', [cMosaic.LCONE_ID cMosaic.MCONE_ID]);

          arbitraryNodesToCompute{numel(arbitraryNodesToCompute)+1} = struct(...
                'number', 2, ...
                'coneType', [cMosaic.LCONE_ID]);


    end
end