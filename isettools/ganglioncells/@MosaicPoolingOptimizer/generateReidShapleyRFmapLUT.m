function [cLUToriginal, cLUTreversed] = generateReidShapleyRFmapLUT()
    % Reid & Shapley (2002) colormap
    cLUTsampled = [
        155 164 183; ...
        148 156 178; ...
        135 143 170; ...
        121 131 164; ...
        105 115 154; ...
        84 97 142; ...
        52 70 123; ...
        46 57 113 ; ...
        0 0 0; ...
        105 45 45; ...
        132 47 47; ...
        150 49 47; ...
        166 58 58; ...
        175 85 83; ...
        184 112 109; ...
        190 129 129; ...
        195 147 144];

    cLUTsampled = cLUTsampled/max(cLUTsampled(:));

    cLUToriginal(:,1) = interp1(1:size(cLUTsampled,1), cLUTsampled(:,1), linspace(1, size(cLUTsampled,1), 1025));
    cLUToriginal(:,2) = interp1(1:size(cLUTsampled,1), cLUTsampled(:,2), linspace(1, size(cLUTsampled,1), 1025));
    cLUToriginal(:,3) = interp1(1:size(cLUTsampled,1), cLUTsampled(:,3), linspace(1, size(cLUTsampled,1), 1025));
   

    cLUTsampled = [
        46 57 105; ...
        52 70 132; ...
        84 97 150; ...
        105 45 166; ...
        121 131 175; ...
        135 143 184; ...
        148 156 190; ...
        155 164 195; ...
        175 175 175; ...
        195 164 155; ...
        190 156 148; ...
        184 143 135; ...
        175 131 121; ...
        166 45 105; ...
        150 97 84; ...
        132 70 52; ...
        105 57 46];

    cLUTsampled = cLUTsampled/max(cLUTsampled(:));

    cLUTreversed(:,1) = interp1(1:size(cLUTsampled,1), cLUTsampled(:,1), linspace(1, size(cLUTsampled,1), 1025));
    cLUTreversed(:,2) = interp1(1:size(cLUTsampled,1), cLUTsampled(:,2), linspace(1, size(cLUTsampled,1), 1025));
    cLUTreversed(:,3) = interp1(1:size(cLUTsampled,1), cLUTsampled(:,3), linspace(1, size(cLUTsampled,1), 1025));
   

end
