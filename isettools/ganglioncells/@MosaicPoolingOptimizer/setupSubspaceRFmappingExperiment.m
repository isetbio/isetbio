function [stimParams, thePresentationDisplay] = setupSubspaceRFmappingExperiment(wavelengthSupport, ...
        stimSizeDegs, maxSFcyclesPerDegree)

    
    maxSFperiodDegs = 1/maxSFcyclesPerDegree;
    minSamplesPerMaxSFperiod = 6;
    pixelSizeDegs = maxSFperiodDegs/minSamplesPerMaxSFperiod;
    omega = round(maxSFcyclesPerDegree * stimSizeDegs);
    nStim = (2*omega+1)^2;
    stimulusPixelsNum = round(stimSizeDegs/pixelSizeDegs);
    a = single(1);
    s = whos('a');
    HartleyMemoryRequirementGBytes = (nStim * stimulusPixelsNum * stimulusPixelsNum * s.bytes)/1024/1024/1024;
    fprintf('To probe RFs with spatial frequencies up to %2.1f c/deg using a patch size of %2.1f degs, %d (%d x %d) Hartley patterns are required (%2.1f GBytes)\n', ...
        maxSFcyclesPerDegree, stimSizeDegs, nStim, stimulusPixelsNum, stimulusPixelsNum, HartleyMemoryRequirementGBytes);

    % Generate a presentation display with a desired resolution
    viewingDistanceMeters = 4;

    thePresentationDisplay = rfMappingStimulusGenerator.presentationDisplay(...
            wavelengthSupport, pixelSizeDegs, ...
            viewingDistanceMeters);

    % Stim params for the RF mapping
    stimParams = struct(...
            'backgroundLuminanceCdM2', 50.0, ...
            'backgroundChromaticity', [0.301 0.301], ...
            'coneContrasts', [1 1 1], ...
            'contrast', 0.75, ...
            'omega', omega, ...
            'pixelSizeDegs', pixelSizeDegs, ...
            'stimSizeDegs', stimSizeDegs, ...
            'wavelengthSupport', displayGet(thePresentationDisplay, 'wave'), ...
            'viewingDistanceMeters', displayGet(thePresentationDisplay, 'viewing distance') ...
            );

end
