function dataOut = STFdependenceOnChromaticityAndOptics(...
	targetedSurroundPurityRange, ...
	targetedRadialEccentricityRange, ...
	targetedCenterConeNumerosityRange, ...
	exemplarRGCs, ...
	orientationSelection, ...
	theMRGCMosaicAchromaticSTFResponsesFullFileName, theMRGCMosaicLconeSTFResponsesFullFileName, ...
	theMRGCMosaicMconeSTFResponsesFullFileName, ...
	theMRGCMosaicAchromaticSTFResponsesControlFullFileName, ...
	theMRGCMosaicLconeSTFResponsesControlFullFileName, ...
	theMRGCMosaicMconeSTFResponsesControlFullFileName)
	
	% Assert that the orientationSelection flag is valid
	assert(ismember(orientationSelection, {'centerConeTypeSTFbased', 'achromaticSTFbased', 'random'}), 'Invalid orientationSelection');

	% Load test and control data
	[theMRGCMosaic, controlStimParams, stimParams, theMRGCMosaicResponseTemporalSupportSeconds, ...
	theControlAchromaticSTFresponses, theControlLconeIsolatingSTFresponses, theControlMconeIsolatingSTFresponses, ...
	 theTestAchromaticSTFresponses, theTestLconeIsolatingSTFresponses, theTestMconeIsolatingSTFresponses] = loadTestAndControlData(...
		theMRGCMosaicAchromaticSTFResponsesFullFileName, ...
		theMRGCMosaicLconeSTFResponsesFullFileName, ...
		theMRGCMosaicMconeSTFResponsesFullFileName,...
		theMRGCMosaicAchromaticSTFResponsesControlFullFileName, ...
		theMRGCMosaicLconeSTFResponsesControlFullFileName, ...
		theMRGCMosaicMconeSTFResponsesControlFullFileName);

	theRGCindices = 1:theMRGCMosaic.rgcsNum;

	% Compute radial eccentricities
	radialEccentricities = sqrt(sum(theMRGCMosaic.rgcRFpositionsDegs(theRGCindices,:).^2,2));

	% Compute surround cone purities and center cone dominances
	%based on cones whose surround pooling weights > center pooling weights
	[surroundConePurities, centerConeDominances, centerConeNumerosities] = ...
		theMRGCMosaic.surroundConePurities(theRGCindices, 'surround pooling weights > center pooling weights');

	% Find L- and M-center RGCs
	LcenterCellIndices = find(centerConeDominances == cMosaic.LCONE_ID);
	McenterCellIndices = find(centerConeDominances == cMosaic.MCONE_ID);
	

	% Generate distribution of surround purities for L- and M-center RGCs
	visualizedRadialEccentricityRange = [0 4];
	[surroundPurityBins, theLcenterCounts, theMcenterCounts] = RGCMosaicAnalyzer.compute.surroundPurityDistribution(...
		surroundConePurities, radialEccentricities, ...
		LcenterCellIndices, McenterCellIndices, ...
		visualizedRadialEccentricityRange);

   	% Determine indices of RGCs within:
   	% - targetedCenterConeNumerosityRange,
   	% - targetedSurroundPurityRange, and
   	% - targetedRadialEccentricityRange

   	if (~isempty(targetedCenterConeNumerosityRange)) 
   		t1 = ( (centerConeNumerosities(:) >= targetedCenterConeNumerosityRange(1)) & ...
		       (centerConeNumerosities(:) <= targetedCenterConeNumerosityRange(2)) );
   	else
   		t1 = true(numel(centerConeNumerosities),1);
   	end

   	if (~isempty(targetedSurroundPurityRange)) 
   		t2 = ( (surroundConePurities(:) >= targetedSurroundPurityRange(1)) & ...
		       (surroundConePurities(:) <= targetedSurroundPurityRange(2)) );
   	else
   		t2 = true(numel(surroundConePurities),1);
   	end 

   	if (~isempty(targetedRadialEccentricityRange))
   		t3 = ((radialEccentricities(:) >= targetedRadialEccentricityRange(1)) & ...
	          (radialEccentricities(:) <= targetedRadialEccentricityRange(2)) );
   	else
   		t3 = true(numel(radialEccentricities),1);
   	end

	targetRGCindices = find(t1 & t2 &t3);
	
	cellsNumInSurroundConePurityBin = surroundPurityBins * 0;
	keptRGCindices = [];

	targetCenterDominances = centerConeDominances(targetRGCindices);
	targetLcenterCellIndices = find(targetCenterDominances == cMosaic.LCONE_ID);
	targetMcenterCellIndices = find(targetCenterDominances == cMosaic.MCONE_ID);

	targetSurroundConePurities = surroundConePurities(targetRGCindices(targetLcenterCellIndices));
	for iRGC = 1:numel(targetLcenterCellIndices)
		% Which bin does it belong to?
		[~,theBin] = min(abs(surroundPurityBins - targetSurroundConePurities(iRGC)));
		cellsNumInSurroundConePurityBin(theBin) = cellsNumInSurroundConePurityBin(theBin) + 1;
		keptRGCindices(numel(keptRGCindices)+1) = targetLcenterCellIndices(iRGC);
	end

	targetSurroundConePurities = surroundConePurities(targetRGCindices(targetMcenterCellIndices));
	for iRGC = 1:numel(targetMcenterCellIndices)
		% Which bin does it belong to?
		[~,theBin] = min(abs(surroundPurityBins - targetSurroundConePurities(iRGC)));
		cellsNumInSurroundConePurityBin(theBin) = cellsNumInSurroundConePurityBin(theBin) + 1;
		keptRGCindices(numel(keptRGCindices)+1) = targetMcenterCellIndices(iRGC);
	end


	targetRGCindices = targetRGCindices(keptRGCindices);
	targetCenterDominances = centerConeDominances(targetRGCindices);
	targetSurroundConePurities = surroundConePurities(targetRGCindices);
	targetRadialEccentricities =  radialEccentricities(targetRGCindices);
	targetLcenterCellIndices = find(targetCenterDominances == cMosaic.LCONE_ID);
	targetMcenterCellIndices = find(targetCenterDominances == cMosaic.MCONE_ID);
	
	% Plot surround purity distribution of the targeted population
	RGCMosaicAnalyzer.compute.surroundPurityDistribution(...
		targetSurroundConePurities, targetRadialEccentricities, ...
		targetLcenterCellIndices, targetMcenterCellIndices, ...
		visualizedRadialEccentricityRange);


	if (isempty(targetRGCindices))
		fprintf('\n\n **** There are no RGCs within the targeted centerConeNumerosityRange (%d-%d), surroundPurityRange (%2.2f-%2.2f), and radialEccentricityRange (%2.2f-%2.2f). ***\n', ...
			targetedCenterConeNumerosityRange(1), targetedCenterConeNumerosityRange(2), ...
			targetedSurroundPurityRange(1), targetedSurroundPurityRange(2), ...
			targetedRadialEccentricityRange(1), targetedRadialEccentricityRange(2));
		return;
	end

	surroundConePurities = surroundConePurities(targetRGCindices);

	% Initialize the BPI measurements
	theTestPeakSTFextension = zeros(2, numel(targetRGCindices));
	theTestOptimalOrientation = zeros(1, numel(targetRGCindices));
	theControlOptimalOrientation = zeros(1, numel(targetRGCindices));
	
	testAchromaticBPI = zeros(1, numel(targetRGCindices));
	testCenterConeIsolatingBPI = zeros(1, numel(targetRGCindices));
	controlAchromaticBPI = zeros(1, numel(targetRGCindices));
	controlCenterConeIsolatingBPI = zeros(1, numel(targetRGCindices));
	testAchromaticFullSTFs = cell(1, numel(targetRGCindices));
	testLconeIsolatingFullSTFs =  cell(1, numel(targetRGCindices));
	testMconeIsolatingFullSTFs = cell(1, numel(targetRGCindices));
	controlAchromaticFullSTFs = cell(1, numel(targetRGCindices));
	controlLconeIsolatingFullSTFs =  cell(1, numel(targetRGCindices));
	controlMconeIsolatingFullSTFs = cell(1, numel(targetRGCindices));

	parfor iRGC = 1:numel(targetRGCindices)
		fprintf('Analyzing RGC %d of %d (surround purity range: [%2.2f - %2.2f]\n', iRGC, numel(targetRGCindices), targetedSurroundPurityRange(1), targetedSurroundPurityRange(2));

		% Load data for this RGC
		theRGCindex = targetRGCindices(iRGC);
		rfCenterConeDominance = centerConeDominances(theRGCindex);

		% Analyze the full 2D STF to obtain the achromatic and L/M-cone isoalting STFs at the optimal orientation
		[theTestAchromaticSTFamplitude, theTestLconeIsolatingSTFamplitude,  theTestMconeIsolatingSTFamplitude, ...
		 testAchromaticFullSTFs{iRGC}, testLconeIsolatingFullSTFs{iRGC},  testMconeIsolatingFullSTFs{iRGC}, ...
		 theControlAchromaticSTFamplitude, theControlLconeIsolatingSTFamplitude,  theControlMconeIsolatingSTFamplitude, ...
		 controlAchromaticFullSTFs{iRGC} ,controlLconeIsolatingFullSTFs{iRGC}, controlMconeIsolatingFullSTFs{iRGC},...
		 theTestPeakSTFextension(:,iRGC), theTestOptimalOrientation(iRGC), theControlOptimalOrientation(iRGC)] = ...
		 	getSTFdataForSingleRGC(...
		 		theRGCindex, ...
		 		orientationSelection, ...
		 		rfCenterConeDominance, ...
		 		controlStimParams, stimParams, ...
		 		theMRGCMosaicResponseTemporalSupportSeconds, ...
		 		theControlAchromaticSTFresponses, ...
		 		theControlLconeIsolatingSTFresponses, ...
		 		theControlMconeIsolatingSTFresponses, ...
	 			theTestAchromaticSTFresponses, ...
	 			theTestLconeIsolatingSTFresponses, ...
	 			theTestMconeIsolatingSTFresponses);

		testAchromaticBPI(iRGC) = bandPassIndex(stimParams.spatialFrequencyCPD, theTestAchromaticSTFamplitude);
		controlAchromaticBPI(iRGC) = bandPassIndex(controlStimParams.spatialFrequencyCPD, theControlAchromaticSTFamplitude);

		if (targetCenterDominances(iRGC) == cMosaic.LCONE_ID)
			testCenterConeIsolatingBPI(iRGC) = bandPassIndex(stimParams.spatialFrequencyCPD, theTestLconeIsolatingSTFamplitude);
			controlCenterConeIsolatingBPI(iRGC) = bandPassIndex(controlStimParams.spatialFrequencyCPD, theControlLconeIsolatingSTFamplitude);
		elseif (targetCenterDominances(iRGC) == cMosaic.MCONE_ID)
			testCenterConeIsolatingBPI(iRGC) = bandPassIndex(stimParams.spatialFrequencyCPD, theTestMconeIsolatingSTFamplitude);
			controlCenterConeIsolatingBPI(iRGC) = bandPassIndex(controlStimParams.spatialFrequencyCPD,theControlMconeIsolatingSTFamplitude);
		end
	end % parfor iRGC = 1:numel(targetRGCindices)

	dataOut = struct();
	dataOut.theMRGCMosaic = theMRGCMosaic;

	% L-cone center RGCs
	targetConeType = cMosaic.LCONE_ID;
	idx = find(targetCenterDominances == targetConeType);
	dataOut.LconeCenter.rgcIndices = targetRGCindices(idx);
	dataOut.LconeCenter.surroundConePurities = targetSurroundConePurities(idx);
	dataOut.LconeCenter.physiologicalOptics.peakSTFextension = theTestPeakSTFextension(:,idx);
	dataOut.LconeCenter.physiologicalOptics.optimalOrientation = theTestOptimalOrientation(idx);
	dataOut.LconeCenter.physiologicalOptics.achromaticBPIs = testAchromaticBPI(idx);
	dataOut.LconeCenter.physiologicalOptics.coneIsolatingBPIs = testCenterConeIsolatingBPI(idx);

	dataOut.LconeCenter.physiologicalOptics.achromaticFullSTFs = testAchromaticFullSTFs{idx};
	dataOut.LconeCenter.physiologicalOptics.LconeIsolatingFullSTFs = testLconeIsolatingFullSTFs{idx};
	dataOut.LconeCenter.physiologicalOptics.MconeIsolatingFullSTFs = testMconeIsolatingFullSTFs{idx};

	dataOut.LconeCenter.diffractionLimitedOptics.optimalOrientation = theControlOptimalOrientation(idx);
	dataOut.LconeCenter.diffractionLimitedOptics.achromaticBPIs = controlAchromaticBPI(idx);
	dataOut.LconeCenter.diffractionLimitedOptics.coneIsolatingBPIs = controlCenterConeIsolatingBPI(idx);

	dataOut.LconeCenter.diffractionLimitedOptics.achromaticFullSTFs = controlAchromaticFullSTFs{idx};
	dataOut.LconeCenter.diffractionLimitedOptics.LconeIsolatingFullSTFs = controlLconeIsolatingFullSTFs{idx};
	dataOut.LconeCenter.diffractionLimitedOptics.MconeIsolatingFullSTFs = controlMconeIsolatingFullSTFs{idx};

	% M-cone center RGCs
	targetConeType = cMosaic.MCONE_ID;
	idx = find(targetCenterDominances == targetConeType);
	dataOut.MconeCenter.rgcIndices = targetRGCindices(idx);
	dataOut.MconeCenter.surroundConePurities = targetSurroundConePurities(idx);
	dataOut.MconeCenter.physiologicalOptics.peakSTFextension = theTestPeakSTFextension(:,idx);
	dataOut.MconeCenter.physiologicalOptics.optimalOrientation = theTestOptimalOrientation(idx);
	dataOut.MconeCenter.physiologicalOptics.achromaticBPIs = testAchromaticBPI(idx);
	dataOut.MconeCenter.physiologicalOptics.coneIsolatingBPIs = testCenterConeIsolatingBPI(idx);

	dataOut.MconeCenter.physiologicalOptics.achromaticFullSTFs = testAchromaticFullSTFs{idx};
	dataOut.MconeCenter.physiologicalOptics.LconeIsolatingFullSTFs = testLconeIsolatingFullSTFs{idx};
	dataOut.MconeCenter.physiologicalOptics.MconeIsolatingFullSTFs = testMconeIsolatingFullSTFs{idx};

	dataOut.MconeCenter.diffractionLimitedOptics.optimalOrientation = theControlOptimalOrientation(idx);
	dataOut.MconeCenter.diffractionLimitedOptics.achromaticBPIs = controlAchromaticBPI(idx);
	dataOut.MconeCenter.diffractionLimitedOptics.coneIsolatingBPIs = controlCenterConeIsolatingBPI(idx);

	dataOut.MconeCenter.diffractionLimitedOptics.achromaticFullSTFs = controlAchromaticFullSTFs{idx};
	dataOut.MconeCenter.diffractionLimitedOptics.LconeIsolatingFullSTFs = controlLconeIsolatingFullSTFs{idx};
	dataOut.MconeCenter.diffractionLimitedOptics.MconeIsolatingFullSTFs = controlMconeIsolatingFullSTFs{idx};


	% Get STF data for some exemplar RGCs with specified values of (achromaticBPIs, centerIsolatingBPIs)
	% Determine indices of exemplarRGCs whose (achromaticBPIs, centerIsolatingBPIs) is closest to the 
	% exemplar (achromaticBPIs, centerIsolatingBPIs)

	if (isempty(exemplarRGCs.fixedRGCindices))
	    exemplarRGCindices = zeros(1,numel(exemplarRGCs.achromaticBPIs));
	    for iExemplarRGCindex = 1:numel(exemplarRGCs.achromaticBPIs)
	    	targetValue = [exemplarRGCs.achromaticBPIs(iExemplarRGCindex) exemplarRGCs.centerIsolatingBPIs(iExemplarRGCindex)];
	    	v = [testAchromaticBPI(:) testCenterConeIsolatingBPI(:)];
	    	[~,idx] = min(sqrt(sum((bsxfun(@minus, v, targetValue)).^2,2)));
	    	exemplarRGCindices(iExemplarRGCindex) = targetRGCindices(idx);
	    	% Make then inf, so we dont select the same cell twice
	    	testAchromaticBPI(idx) = inf;
	    	testCenterConeIsolatingBPI(idx) = inf;
	    end
	else
		exemplarRGCindices = exemplarRGCs.fixedRGCindices;
		for iRGC = 1:numel(exemplarRGCs.fixedRGCindices)
			idx = find(targetRGCindices == exemplarRGCs.fixedRGCindices(iRGC));
			if (~isempty(idx))
				exemplarRGCs.achromaticBPIs(iRGC) = testAchromaticBPI(idx);
				exemplarRGCs.centerIsolatingBPIs(iRGC) = testCenterConeIsolatingBPI(idx);
			else
				% ExemplarRGC not found in included RGCs
				exemplarRGCs.achromaticBPIs(iRGC) = nan;
				exemplarRGCs.centerIsolatingBPIs(iRGC) = nan;
			end
		end
	end

    
    % Plot the STFs of the exemplar RGCs
    for iExemplarRGCindex = 1:numel(exemplarRGCindices)
    	if (isnan(exemplarRGCs.achromaticBPIs(iExemplarRGCindex)))
    		dataOut.exemplarRGCdata{iExemplarRGCindex} = [];
    		continue;
    	end

    	theRGCindex = exemplarRGCindices(iExemplarRGCindex);
    	rfCenterConeDominance = centerConeDominances(theRGCindex);

    	% Get the STF data
		[theTestAchromaticSTFamplitude, theTestLconeIsolatingSTFamplitude,  theTestMconeIsolatingSTFamplitude, ...
		 theTestAchromaticFullSTF, theTestLconeIsolatingFullSTF, theTestMconeIsolatingFullSTF, ...
		 theControlAchromaticSTFamplitude, theControlLconeIsolatingSTFamplitude,  theControlMconeIsolatingSTFamplitude, ...
		 theControlAchromaticFullSTF, theControlLconeIsolatingFullSTF, theControlMconeIsolatingFullSTF, ...
		 theTestPeakSTFextension, theTestOptimalOrientation, theControlOptimalOrientation] = ...
		 	getSTFdataForSingleRGC(...
		 		theRGCindex, ...
		 		orientationSelection, ...
		 		rfCenterConeDominance, ...
		 		controlStimParams, stimParams, ...
		 		theMRGCMosaicResponseTemporalSupportSeconds, ...
		 		theControlAchromaticSTFresponses, ...
		 		theControlLconeIsolatingSTFresponses, ...
		 		theControlMconeIsolatingSTFresponses, ...
	 			theTestAchromaticSTFresponses, ...
	 			theTestLconeIsolatingSTFresponses, ...
	 			theTestMconeIsolatingSTFresponses);

		d = struct();
		d.rgcIndex = theRGCindex;
		d.rfCenterConeDominance = rfCenterConeDominance;
		d.surroundConePurity = theMRGCMosaic.surroundConePurities(...
			theRGCindex, 'surround pooling weights > center pooling weights');


		% Bring test and control full STFs on the same SF support
		HRorientationsNum = size(theControlAchromaticFullSTF,1);
		HRsfsNum = 32;
		HRsfSupport = logspace(log10(controlStimParams.spatialFrequencyCPD(1)), log10(150), HRsfsNum);
		theHRControlAchromaticFullSTF = zeros(HRorientationsNum, HRsfsNum);
		theHRControlLconeIsolatingFullSTF = zeros(HRorientationsNum, HRsfsNum);
		theHRControlMconeIsolatingFullSTF = zeros(HRorientationsNum, HRsfsNum);
		theHRTestAchromaticFullSTF = zeros(HRorientationsNum, HRsfsNum);
		theHRTestLconeIsolatingFullSTF = zeros(HRorientationsNum, HRsfsNum);
		theHRTestMconeIsolatingFullSTF = zeros(HRorientationsNum, HRsfsNum);

		interpolationMethod = 'linear';
		for iOri = 1:HRorientationsNum
			theHRControlAchromaticFullSTF(iOri,:) = interp1(controlStimParams.spatialFrequencyCPD, squeeze(theControlAchromaticFullSTF(iOri,:)), HRsfSupport, interpolationMethod);
			theHRControlLconeIsolatingFullSTF(iOri,:)  = interp1(controlStimParams.spatialFrequencyCPD, squeeze(theControlLconeIsolatingFullSTF(iOri,:)), HRsfSupport, interpolationMethod);
			theHRControlMconeIsolatingFullSTF(iOri,:)  = interp1(controlStimParams.spatialFrequencyCPD, squeeze(theControlMconeIsolatingFullSTF(iOri,:)), HRsfSupport, interpolationMethod);
			theHRTestAchromaticFullSTF(iOri,:) = interp1(stimParams.spatialFrequencyCPD, squeeze(theTestAchromaticFullSTF(iOri,:)), HRsfSupport, interpolationMethod);
			theHRTestLconeIsolatingFullSTF(iOri,:)  = interp1(stimParams.spatialFrequencyCPD, squeeze(theTestLconeIsolatingFullSTF(iOri,:)), HRsfSupport, interpolationMethod);
			theHRTestMconeIsolatingFullSTF(iOri,:)  = interp1(stimParams.spatialFrequencyCPD, squeeze(theTestMconeIsolatingFullSTF(iOri,:)), HRsfSupport, interpolationMethod);
		end


		d.diffractionLimitedSTF.optimalOrientation = theControlOptimalOrientation;
		d.diffractionLimitedSTF.sfSupport = controlStimParams.spatialFrequencyCPD;
		d.diffractionLimitedSTF.orientationSupport = stimParams.orientationDegs;
		d.diffractionLimitedSTF.achromaticSTF = theControlAchromaticSTFamplitude;
		d.diffractionLimitedSTF.lConeIsolatingSTF = theControlLconeIsolatingSTFamplitude;
		d.diffractionLimitedSTF.mConeIsolatingSTF = theControlMconeIsolatingSTFamplitude;
		d.diffractionLimitedSTF.sfSupportFullSTF = HRsfSupport;
		d.diffractionLimitedSTF.achromaticFullSTF = theHRControlAchromaticFullSTF;
		d.diffractionLimitedSTF.lConeIsolatingFullSTF = theHRControlLconeIsolatingFullSTF;
		d.diffractionLimitedSTF.mConeIsolatingFullSTF = theHRControlMconeIsolatingFullSTF;
		d.diffractionLimitedSTF.achromaticSTFBPI = bandPassIndex(controlStimParams.spatialFrequencyCPD, theControlAchromaticSTFamplitude);
		d.diffractionLimitedSTF.lConeIsolatingSTFBPI = bandPassIndex(controlStimParams.spatialFrequencyCPD, theControlLconeIsolatingSTFamplitude);
		d.diffractionLimitedSTF.mConeIsolatingSTFBPI = bandPassIndex(controlStimParams.spatialFrequencyCPD, theControlMconeIsolatingSTFamplitude);

		d.physiologicalSTF.optimalOrientation = theTestOptimalOrientation; 
		d.physiologicalSTF.sfSupport = stimParams.spatialFrequencyCPD;
		d.physiologicalSTF.orientationSupport = stimParams.orientationDegs;
		d.physiologicalSTF.achromaticSTF = theTestAchromaticSTFamplitude;
		d.physiologicalSTF.lConeIsolatingSTF = theTestLconeIsolatingSTFamplitude;
		d.physiologicalSTF.mConeIsolatingSTF = theTestMconeIsolatingSTFamplitude;
		d.physiologicalSTF.sfSupportFullSTF = HRsfSupport;
		d.physiologicalSTF.achromaticFullSTF = theHRTestAchromaticFullSTF;
		d.physiologicalSTF.lConeIsolatingFullSTF = theHRTestLconeIsolatingFullSTF;
		d.physiologicalSTF.mConeIsolatingFullSTF = theHRTestMconeIsolatingFullSTF;
		d.physiologicalSTF.achromaticSTFBPI = bandPassIndex(stimParams.spatialFrequencyCPD, theTestAchromaticSTFamplitude);
		d.physiologicalSTF.lConeIsolatingSTFBPI = bandPassIndex(stimParams.spatialFrequencyCPD, theTestLconeIsolatingSTFamplitude);
		d.physiologicalSTF.mConeIsolatingSTFBPI = bandPassIndex(stimParams.spatialFrequencyCPD, theTestMconeIsolatingSTFamplitude);

		d.maxSTF = max([...
		 	max(theControlAchromaticSTFamplitude(:)) ...
		 	max(theControlLconeIsolatingSTFamplitude(:)) ...
		 	max(theControlMconeIsolatingSTFamplitude(:)) ...
		 	max(theTestAchromaticSTFamplitude(:)) ...
		 	max(theTestLconeIsolatingSTFamplitude(:)) ...
		 	max(theTestMconeIsolatingSTFamplitude(:)) ...
		 	]);

		dataOut.exemplarRGCdata{iExemplarRGCindex} = d;

    end % for iExemplarRGCindex 
end


function theBPI = bandPassIndex(theSpatialFrequencySupport, theSTF)

	[~, lowestSFindex] = min(theSpatialFrequencySupport(:));
	Ro = theSTF(lowestSFindex);
	[Rmax, indexOfMaxResponse] = max(theSTF(:));

	theBPI = Ro/Rmax;

	if (1==2)
		figure(9);
		plot(theSpatialFrequencySupport, theSTF, 'k-', 'LineWidth', 1.5);
		hold on;
		plot(theSpatialFrequencySupport(lowestSFindex), Ro, 'ro', 'MarkerSize', 16);
		plot(theSpatialFrequencySupport(indexOfMaxResponse), Rmax,  'bo', 'MarkerSize', 16);
		set(gca, 'XScale', 'log', 'XLim', [0.01 150]);
		title(sprintf('BPI = %2.3f', theBPI));
		drawnow;
		pause
	end
end

function render2DSTF(ax, spatialFrequencyCPD, orientationDegs, theFullSTFamplitudeSpectra, full2DSTFmax, fixedOptimalOrientation, chromaticityInfo)
	imagesc(ax, spatialFrequencyCPD, orientationDegs, theFullSTFamplitudeSpectra/full2DSTFmax);
	hold(ax, 'on')
	plot(ax, spatialFrequencyCPD, spatialFrequencyCPD*0 + fixedOptimalOrientation, 'b--', 'LineWidth', 1.5);
	colormap(ax, brewermap(1024, '*greys'));
	axis(ax, 'square'); axis(ax, 'xy');
	set(ax, 'CLim', [0 1]);
	ylabel(ax,'orientation (degs)');
	xlabel(ax,'spatial frequency (c/deg)')
	title(ax, chromaticityInfo)
end


function [theMRGCMosaic, controlStimParams, stimParams, theMRGCMosaicResponseTemporalSupportSeconds, ...
	 theControlAchromaticSTFresponses, theControlLconeIsolatingSTFresponses, theControlMconeIsolatingSTFresponses, ...
	 theTestAchromaticSTFresponses, theTestLconeIsolatingSTFresponses, theTestMconeIsolatingSTFresponses] = loadTestAndControlData(...
		theMRGCMosaicAchromaticSTFResponsesFullFileName, theMRGCMosaicLconeSTFResponsesFullFileName, theMRGCMosaicMconeSTFResponsesFullFileName,...
		theMRGCMosaicAchromaticSTFResponsesControlFullFileName, theMRGCMosaicLconeSTFResponsesControlFullFileName, theMRGCMosaicMconeSTFResponsesControlFullFileName)

	fprintf('Loading CONTROL achromatic STFs from:\n%s\n', theMRGCMosaicAchromaticSTFResponsesControlFullFileName);
	load(theMRGCMosaicAchromaticSTFResponsesControlFullFileName, 'theMRGCMosaic', 'stimParams', ...
		'theNoiseFreeSpatioTemporalMRGCMosaicResponses2DSTF', 'theMRGCMosaicResponseTemporalSupportSeconds');
	theControlAchromaticSTFresponses = theNoiseFreeSpatioTemporalMRGCMosaicResponses2DSTF;
	controlStimParams = stimParams;


	fprintf('Loading CONTROL L-cone isolating STFs from:\n%s\n', theMRGCMosaicLconeSTFResponsesControlFullFileName);
	load(theMRGCMosaicLconeSTFResponsesControlFullFileName, 'theMRGCMosaic', 'stimParams', ...
		'theNoiseFreeSpatioTemporalMRGCMosaicResponses2DSTF', 'theMRGCMosaicResponseTemporalSupportSeconds');
	theControlLconeIsolatingSTFresponses = theNoiseFreeSpatioTemporalMRGCMosaicResponses2DSTF;  
	controlStimParams = stimParams;


	fprintf('Loading CONTROL M-cone isolating STFs from:\n%s\n', theMRGCMosaicMconeSTFResponsesControlFullFileName);
	load(theMRGCMosaicMconeSTFResponsesControlFullFileName, 'theMRGCMosaic', 'stimParams', ...
		'theNoiseFreeSpatioTemporalMRGCMosaicResponses2DSTF', 'theMRGCMosaicResponseTemporalSupportSeconds');
	theControlMconeIsolatingSTFresponses = theNoiseFreeSpatioTemporalMRGCMosaicResponses2DSTF;
	controlStimParams = stimParams;


	fprintf('Loading achromatic STFs from:\n%s\n', theMRGCMosaicAchromaticSTFResponsesFullFileName);
	load(theMRGCMosaicAchromaticSTFResponsesFullFileName, 'theMRGCMosaic', 'stimParams', ...
		'theNoiseFreeSpatioTemporalMRGCMosaicResponses2DSTF', 'theMRGCMosaicResponseTemporalSupportSeconds');
	theTestAchromaticSTFresponses = theNoiseFreeSpatioTemporalMRGCMosaicResponses2DSTF;


	fprintf('Loading L-cone isolating STFs from:\n%s\n', theMRGCMosaicLconeSTFResponsesFullFileName);
	load(theMRGCMosaicLconeSTFResponsesFullFileName, 'theMRGCMosaic', 'stimParams', ...
		'theNoiseFreeSpatioTemporalMRGCMosaicResponses2DSTF', 'theMRGCMosaicResponseTemporalSupportSeconds');
	theTestLconeIsolatingSTFresponses = theNoiseFreeSpatioTemporalMRGCMosaicResponses2DSTF;


	fprintf('Loading M-cone isolating STFs from:\n%s\n', theMRGCMosaicMconeSTFResponsesFullFileName);
	load(theMRGCMosaicMconeSTFResponsesFullFileName, 'theMRGCMosaic', 'stimParams', ...
		'theNoiseFreeSpatioTemporalMRGCMosaicResponses2DSTF', 'theMRGCMosaicResponseTemporalSupportSeconds');
	theTestMconeIsolatingSTFresponses = theNoiseFreeSpatioTemporalMRGCMosaicResponses2DSTF;

end


function [theTestAchromaticSTFamplitude, theTestLconeIsolatingSTFamplitude,  theTestMconeIsolatingSTFamplitude, ...
	      theTestAchromaticFullSTFamplitude, theTestLconeIsolatingFullSTFamplitude,  theTestMconeIsolatingFullSTFamplitude, ...
		  theControlAchromaticSTFamplitude, theControlLconeIsolatingSTFamplitude,  theControlMconeIsolatingSTFamplitude, ...
		  theControlAchromaticFullSTFamplitude, theControlLconeIsolatingFullSTFamplitude,  theControlMconeIsolatingFullSTFamplitude, ...
		  thePeakSTFextension, fixedOptimalOrientation, theControlOptimalOrientation] = ...
		 	getSTFdataForSingleRGC(...
		 		theRGCindex, ...
		 		orientationSelection, ...
		 		rfCenterConeDominance, ...
		 		controlStimParams, stimParams, ...
		 		theMRGCMosaicResponseTemporalSupportSeconds, ...
		 		theControlAchromaticSTFresponses, ...
		 		theControlLconeIsolatingSTFresponses, ...
		 		theControlMconeIsolatingSTFresponses, ...
	 			theTestAchromaticSTFresponses, ...
	 			theTestLconeIsolatingSTFresponses, ...
	 			theTestMconeIsolatingSTFresponses)


	if (strcmp(orientationSelection, 'achromaticSTFbased')) || (strcmp(orientationSelection, 'random'))

		theSelectedOrientation = [];
		if (strcmp(orientationSelection, 'random'))
			theSelectedOrientation = nan;
		end

		[theMaximalExcursionAchromaticSTFamplitudeSpectrum, ...
			theOptimalAchromaticOrientation, ...
			theMaximalExcursionAchromaticSTFphaseSpectrum, ...
			theTestAchromaticSTFamplitude, ...
			theTestAchromaticFullSTFamplitude, ...
			theFullAchromaticSTFphaseSpectra] = RGCMosaicConstructor.helper.simulateExperiment.maximalExcursionSTFfrom2DSTF(...
					stimParams.orientationDegs, stimParams.spatialFrequencyCPD, stimParams.spatialPhasesDegs, ...
					theMRGCMosaicResponseTemporalSupportSeconds, squeeze(theTestAchromaticSTFresponses(:,:,:,theRGCindex)), ...
					'visualizeFullAndMaximalExcursionSTF', ~true, ...
					'fixedOptimalOrientation', theSelectedOrientation);
		fixedOptimalOrientation = theOptimalAchromaticOrientation;

		[theMaximalExcursionLconeIsolatingSTFamplitudeSpectrum, ...
			theOptimalLconeIsolatingOrientation, ...
			theMaximalExcursionLconeIsolatingSTFphaseSpectrum, ...
			theTestLconeIsolatingSTFamplitude, ...
			theTestLconeIsolatingFullSTFamplitude, ...
			theFullLconeIsolatingSTFphaseSpectra] = RGCMosaicConstructor.helper.simulateExperiment.maximalExcursionSTFfrom2DSTF(...
					stimParams.orientationDegs, stimParams.spatialFrequencyCPD, stimParams.spatialPhasesDegs, ...
					theMRGCMosaicResponseTemporalSupportSeconds, squeeze(theTestLconeIsolatingSTFresponses(:,:,:,theRGCindex)), ...
					'visualizeFullAndMaximalExcursionSTF', ~true, ...
					'fixedOptimalOrientation',fixedOptimalOrientation);

		[theMaximalExcursionMconeIsolatingSTFamplitudeSpectrum, ...
			theOptimalMconeIsolatingOrientation, ...
			theMaximalExcursionMconeIsolatingSTFphaseSpectrum, ...
			theTestMconeIsolatingSTFamplitude, ...
			theTestMconeIsolatingFullSTFamplitude, ...
			theFullMconeIsolatingSTFphaseSpectra] = RGCMosaicConstructor.helper.simulateExperiment.maximalExcursionSTFfrom2DSTF(...
					stimParams.orientationDegs, stimParams.spatialFrequencyCPD, stimParams.spatialPhasesDegs, ...
					theMRGCMosaicResponseTemporalSupportSeconds, squeeze(theTestMconeIsolatingSTFresponses(:,:,:,theRGCindex)), ...
					'visualizeFullAndMaximalExcursionSTF', ~true, ...
					'fixedOptimalOrientation',fixedOptimalOrientation);

		% Now the control data
		[theControlMaximalExcursionAchromaticSTFamplitudeSpectrum, ...
			theControlOptimalAchromaticOrientation, ...
			theControlMaximalExcursionAchromaticSTFphaseSpectrum, ...
			theControlAchromaticSTFamplitude, ...
			theControlAchromaticFullSTFamplitude, ...
			theControlFullAchromaticSTFphaseSpectra] = RGCMosaicConstructor.helper.simulateExperiment.maximalExcursionSTFfrom2DSTF(...
					controlStimParams.orientationDegs, controlStimParams.spatialFrequencyCPD, controlStimParams.spatialPhasesDegs, ...
					theMRGCMosaicResponseTemporalSupportSeconds, squeeze(theControlAchromaticSTFresponses(:,:,:,theRGCindex)), ...
					'visualizeFullAndMaximalExcursionSTF', ~true, ...
					'fixedOptimalOrientation', theSelectedOrientation);
			theControlOptimalOrientation = theControlOptimalAchromaticOrientation;


			[theControlMaximalExcursionLconeIsolatingSTFamplitudeSpectrum, ...
			theControlOptimalLconeIsolatingOrientation, ...
			theControlMaximalExcursionLconeIsolatingSTFphaseSpectrum, ...
			theControlLconeIsolatingSTFamplitude, ...
			theControlLconeIsolatingFullSTFamplitude, ...
			theControlFullLconeIsolatingSTFphaseSpectra] = RGCMosaicConstructor.helper.simulateExperiment.maximalExcursionSTFfrom2DSTF(...
					controlStimParams.orientationDegs, controlStimParams.spatialFrequencyCPD, controlStimParams.spatialPhasesDegs, ...
					theMRGCMosaicResponseTemporalSupportSeconds, squeeze(theControlLconeIsolatingSTFresponses(:,:,:,theRGCindex)), ...
					'visualizeFullAndMaximalExcursionSTF', ~true, ...
					'fixedOptimalOrientation', theControlOptimalOrientation);


			[theControlMaximalExcursionMconeIsolatingSTFamplitudeSpectrum, ...
			theControlOptimalMconeIsolatingOrientation, ...
			theControlMaximalExcursionMconeIsolatingSTFphaseSpectrum, ...
			theControlMconeIsolatingSTFamplitude, ...
			theControlMconeIsolatingFullSTFamplitude, ...
			theControlFullMconeIsolatingSTFphaseSpectra] = RGCMosaicConstructor.helper.simulateExperiment.maximalExcursionSTFfrom2DSTF(...
					controlStimParams.orientationDegs, controlStimParams.spatialFrequencyCPD, controlStimParams.spatialPhasesDegs, ...
					theMRGCMosaicResponseTemporalSupportSeconds, squeeze(theControlMconeIsolatingSTFresponses(:,:,:,theRGCindex)), ...
					'visualizeFullAndMaximalExcursionSTF', ~true, ...
					'fixedOptimalOrientation', theControlOptimalOrientation);

	elseif (strcmp(orientationSelection, 'centerConeTypeSTFbased'))
		if (rfCenterConeDominance == cMosaic.LCONE_ID)
			[theMaximalExcursionLconeIsolatingSTFamplitudeSpectrum, ...
			theOptimalLconeIsolatingOrientation, ...
			theMaximalExcursionLconeIsolatingSTFphaseSpectrum, ...
		 	theTestLconeIsolatingSTFamplitude, ...
		 	theTestLconeIsolatingFullSTFamplitude , ...
			theFullLconeIsolatingSTFphaseSpectra] = RGCMosaicConstructor.helper.simulateExperiment.maximalExcursionSTFfrom2DSTF(...
				stimParams.orientationDegs, stimParams.spatialFrequencyCPD, stimParams.spatialPhasesDegs, ...
				theMRGCMosaicResponseTemporalSupportSeconds, squeeze(theTestLconeIsolatingSTFresponses(:,:,:,theRGCindex)), ...
				'visualizeFullAndMaximalExcursionSTF', ~true, ...
				'fixedOptimalOrientation', []);
		 	fixedOptimalOrientation = theOptimalLconeIsolatingOrientation;

		 	[theMaximalExcursionMconeIsolatingSTFamplitudeSpectrum, ...
			theOptimalMconeIsolatingOrientation, ...
			theMaximalExcursionMconeIsolatingSTFphaseSpectrum, ...
			theTestMconeIsolatingSTFamplitude, ...
			theTestMconeIsolatingFullSTFamplitude, ...
			theFullMconeIsolatingSTFphaseSpectra] = RGCMosaicConstructor.helper.simulateExperiment.maximalExcursionSTFfrom2DSTF(...
					stimParams.orientationDegs, stimParams.spatialFrequencyCPD, stimParams.spatialPhasesDegs, ...
					theMRGCMosaicResponseTemporalSupportSeconds, squeeze(theTestMconeIsolatingSTFresponses(:,:,:,theRGCindex)), ...
					'visualizeFullAndMaximalExcursionSTF', ~true, ...
					'fixedOptimalOrientation',fixedOptimalOrientation);

			[theMaximalExcursionAchromaticSTFamplitudeSpectrum, ...
			theOptimalAchromaticOrientation, ...
			theMaximalExcursionAchromaticSTFphaseSpectrum, ...
			theTestAchromaticSTFamplitude, ...
			theTestAchromaticFullSTFamplitude, ...
			theFullAchromaticSTFphaseSpectra] = RGCMosaicConstructor.helper.simulateExperiment.maximalExcursionSTFfrom2DSTF(...
					stimParams.orientationDegs, stimParams.spatialFrequencyCPD, stimParams.spatialPhasesDegs, ...
					theMRGCMosaicResponseTemporalSupportSeconds, squeeze(theTestAchromaticSTFresponses(:,:,:,theRGCindex)), ...
					'visualizeFullAndMaximalExcursionSTF', ~true, ...
					'fixedOptimalOrientation', fixedOptimalOrientation);

		else
			[theMaximalExcursionMconeIsolatingSTFamplitudeSpectrum, ...
			theOptimalMconeIsolatingOrientation, ...
			theMaximalExcursionMconeIsolatingSTFphaseSpectrum, ...
			theTestMconeIsolatingSTFamplitude, ...
			theTestMconeIsolatingFullSTFamplitude, ...
			theFullMconeIsolatingSTFphaseSpectra] = RGCMosaicConstructor.helper.simulateExperiment.maximalExcursionSTFfrom2DSTF(...
					stimParams.orientationDegs, stimParams.spatialFrequencyCPD, stimParams.spatialPhasesDegs, ...
					theMRGCMosaicResponseTemporalSupportSeconds, squeeze(theTestMconeIsolatingSTFresponses(:,:,:,theRGCindex)), ...
					'visualizeFullAndMaximalExcursionSTF', ~true, ...
					'fixedOptimalOrientation', []);
			fixedOptimalOrientation = theOptimalMconeIsolatingOrientation;

			[theMaximalExcursionLconeIsolatingSTFamplitudeSpectrum, ...
			theOptimalLconeIsolatingOrientation, ...
			theMaximalExcursionLconeIsolatingSTFphaseSpectrum, ...
		 	theTestLconeIsolatingSTFamplitude, ...
		 	theTestLconeIsolatingFullSTFamplitude, ...
			theFullLconeIsolatingSTFphaseSpectra] = RGCMosaicConstructor.helper.simulateExperiment.maximalExcursionSTFfrom2DSTF(...
				stimParams.orientationDegs, stimParams.spatialFrequencyCPD, stimParams.spatialPhasesDegs, ...
				theMRGCMosaicResponseTemporalSupportSeconds, squeeze(theTestLconeIsolatingSTFresponses(:,:,:,theRGCindex)), ...
				'visualizeFullAndMaximalExcursionSTF', ~true, ...
				'fixedOptimalOrientation', fixedOptimalOrientation);

			[theMaximalExcursionAchromaticSTFamplitudeSpectrum, ...
			theOptimalAchromaticOrientation, ...
			theMaximalExcursionAchromaticSTFphaseSpectrum, ...
			theTestAchromaticSTFamplitude, ...
			theTestAchromaticFullSTFamplitude, ...
			theFullAchromaticSTFphaseSpectra] = RGCMosaicConstructor.helper.simulateExperiment.maximalExcursionSTFfrom2DSTF(...
					stimParams.orientationDegs, stimParams.spatialFrequencyCPD, stimParams.spatialPhasesDegs, ...
					theMRGCMosaicResponseTemporalSupportSeconds, squeeze(theTestAchromaticSTFresponses(:,:,:,theRGCindex)), ...
					'visualizeFullAndMaximalExcursionSTF', ~true, ...
					'fixedOptimalOrientation', fixedOptimalOrientation);
		end

		% Now the control data
		if (rfCenterConeDominance == cMosaic.LCONE_ID)
			[theControlMaximalExcursionLconeIsolatingSTFamplitudeSpectrum, ...
			theControlOptimalLconeIsolatingOrientation, ...
			theControlMaximalExcursionLconeIsolatingSTFphaseSpectrum, ...
			theControlLconeIsolatingSTFamplitude, ...
			theControlLconeIsolatingFullSTFamplitude, ...
			theControlFullLconeIsolatingSTFphaseSpectra] = RGCMosaicConstructor.helper.simulateExperiment.maximalExcursionSTFfrom2DSTF(...
				controlStimParams.orientationDegs, controlStimParams.spatialFrequencyCPD, controlStimParams.spatialPhasesDegs, ...
				theMRGCMosaicResponseTemporalSupportSeconds, squeeze(theControlLconeIsolatingSTFresponses(:,:,:,theRGCindex)), ...
				'visualizeFullAndMaximalExcursionSTF', ~true, ...
				'fixedOptimalOrientation', []);
			theControlOptimalOrientation = theControlOptimalLconeIsolatingOrientation;

			[theControlMaximalExcursionMconeIsolatingSTFamplitudeSpectrum, ...
			theControlOptimalMconeIsolatingOrientation, ...
			theControlMaximalExcursionMconeIsolatingSTFphaseSpectrum, ...
			theControlMconeIsolatingSTFamplitude, ...
			theControlMconeIsolatingFullSTFamplitude, ...
			theControlFullMconeIsolatingSTFphaseSpectra] = RGCMosaicConstructor.helper.simulateExperiment.maximalExcursionSTFfrom2DSTF(...
					controlStimParams.orientationDegs, controlStimParams.spatialFrequencyCPD, controlStimParams.spatialPhasesDegs, ...
					theMRGCMosaicResponseTemporalSupportSeconds, squeeze(theControlMconeIsolatingSTFresponses(:,:,:,theRGCindex)), ...
					'visualizeFullAndMaximalExcursionSTF', ~true, ...
					'fixedOptimalOrientation', theControlOptimalOrientation);


			[theControlMaximalExcursionAchromaticSTFamplitudeSpectrum, ...
			theControlOptimalAchromaticOrientation, ...
			theControlMaximalExcursionAchromaticSTFphaseSpectrum, ...
			theControlAchromaticSTFamplitude, ...
			theControlAchromaticFullSTFamplitude, ...
			theControlFullAchromaticSTFphaseSpectra] = RGCMosaicConstructor.helper.simulateExperiment.maximalExcursionSTFfrom2DSTF(...
					controlStimParams.orientationDegs, controlStimParams.spatialFrequencyCPD, controlStimParams.spatialPhasesDegs, ...
					theMRGCMosaicResponseTemporalSupportSeconds, squeeze(theControlAchromaticSTFresponses(:,:,:,theRGCindex)), ...
					'visualizeFullAndMaximalExcursionSTF', ~true, ...
					'fixedOptimalOrientation', theControlOptimalOrientation);

		else
			[theControlMaximalExcursionMconeIsolatingSTFamplitudeSpectrum, ...
			theControlOptimalMconeIsolatingOrientation, ...
			theControlMaximalExcursionMconeIsolatingSTFphaseSpectrum, ...
			theControlMconeIsolatingSTFamplitude, ...
			theControlMconeIsolatingFullSTFamplitude, ...
			theControlFullMconeIsolatingSTFphaseSpectra] = RGCMosaicConstructor.helper.simulateExperiment.maximalExcursionSTFfrom2DSTF(...
					controlStimParams.orientationDegs, controlStimParams.spatialFrequencyCPD, controlStimParams.spatialPhasesDegs, ...
					theMRGCMosaicResponseTemporalSupportSeconds, squeeze(theControlMconeIsolatingSTFresponses(:,:,:,theRGCindex)), ...
					'visualizeFullAndMaximalExcursionSTF', ~true, ...
					'fixedOptimalOrientation', []);
			theControlOptimalOrientation = theControlOptimalMconeIsolatingOrientation;

			[theControlMaximalExcursionLconeIsolatingSTFamplitudeSpectrum, ...
			theControlOptimalLconeIsolatingOrientation, ...
			theControlMaximalExcursionLconeIsolatingSTFphaseSpectrum, ...
			theControlLconeIsolatingSTFamplitude, ...
			theControlLconeIsolatingFullSTFamplitude, ...
			theControlFullLconeIsolatingSTFphaseSpectra] = RGCMosaicConstructor.helper.simulateExperiment.maximalExcursionSTFfrom2DSTF(...
				controlStimParams.orientationDegs, controlStimParams.spatialFrequencyCPD, controlStimParams.spatialPhasesDegs, ...
				theMRGCMosaicResponseTemporalSupportSeconds, squeeze(theControlLconeIsolatingSTFresponses(:,:,:,theRGCindex)), ...
				'visualizeFullAndMaximalExcursionSTF', ~true, ...
				'fixedOptimalOrientation', theControlOptimalOrientation);

			[theControlMaximalExcursionAchromaticSTFamplitudeSpectrum, ...
			theControlOptimalAchromaticOrientation, ...
			theControlMaximalExcursionAchromaticSTFphaseSpectrum, ...
			theControlAchromaticSTFamplitude, ...
			theControlAchromaticFullSTFamplitude, ...
			theControlFullAchromaticSTFphaseSpectra] = RGCMosaicConstructor.helper.simulateExperiment.maximalExcursionSTFfrom2DSTF(...
					controlStimParams.orientationDegs, controlStimParams.spatialFrequencyCPD, controlStimParams.spatialPhasesDegs, ...
					theMRGCMosaicResponseTemporalSupportSeconds, squeeze(theControlAchromaticSTFresponses(:,:,:,theRGCindex)), ...
					'visualizeFullAndMaximalExcursionSTF', ~true, ...
					'fixedOptimalOrientation', theControlOptimalOrientation);
		end
	end

	% Compute the peakSTF extention data
	% The first entry: the peak STF amplitude
	[thePeakSTFextension(1,1), indexOfPeakSTF] = max(theTestAchromaticSTFamplitude);

	% The second entry: the SF at which the STF falls to 1/2 of the peakSTF
	halfMaxSTF = 0.5*thePeakSTFextension(1,1);
	sfIndicesToSearch = indexOfPeakSTF:numel(theTestAchromaticSTFamplitude);
    [~,idx] = min(abs(theTestAchromaticSTFamplitude(sfIndicesToSearch)-halfMaxSTF));
    thePeakSTFextension(2,1) = stimParams.spatialFrequencyCPD(sfIndicesToSearch(idx));
end
