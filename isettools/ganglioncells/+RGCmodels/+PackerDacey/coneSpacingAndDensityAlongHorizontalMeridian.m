function d = coneSpacingAndDensityAlongHorizontalMeridian()

    % Read in data
    [temporalMeridian, nasalMeridian] = macaqueConeDensity();

    % Cone density to spacing in MMs
    temporalMeridian.coneSpacingMM = RGCmodels.Watson.convert.densityToSpacingForHexGrid(temporalMeridian.coneDensityPerSquaredMM);
    nasalMeridian.coneSpacingMM = RGCmodels.Watson.convert.densityToSpacingForHexGrid(nasalMeridian.coneDensityPerSquaredMM);

    % Convert to degs
    temporalMeridian.coneSpacingDegs = RGCMosaicConstructor.helper.convert.eccentricityInMacaqueRetina(...
        'MMsToDegs', temporalMeridian.coneSpacingMM);
    nasalMeridian.coneSpacingDegs = RGCMosaicConstructor.helper.convert.eccentricityInMacaqueRetina(...
        'MMsToDegs', nasalMeridian.coneSpacingMM);
    temporalMeridian.eccDegs = RGCMosaicConstructor.helper.convert.eccentricityInMacaqueRetina(...
        'MMsToDegs', temporalMeridian.eccMM);
    nasalMeridian.eccDegs = RGCMosaicConstructor.helper.convert.eccentricityInMacaqueRetina(...
        'MMsToDegs', nasalMeridian.eccMM);

    generatePlot = true;
    if (generatePlot)
        figure(1); clf
        plot(temporalMeridian.eccMM, temporalMeridian.coneDensityPerSquaredMM, 'rs-');
        hold on;
        plot(nasalMeridian.eccMM, nasalMeridian.coneDensityPerSquaredMM, 'bs-');
        set(gca, 'YScale', 'log', 'YLim', [1e3 1e6], 'YTick', [1e3 1e4 1e5 1e6]);
        set(gca, 'XLim', [-25 25], 'XTick', -30:5:30);
        grid on
        legend({'temporal', 'nasal'});
        xlabel('eccentricity (mm)');
        ylabel('cone density (cones/mm^2)');

        figure(2); clf
        plot(temporalMeridian.eccMM, temporalMeridian.coneSpacingDegs*60, 'rs-');
        hold on;
        plot(nasalMeridian.eccMM, nasalMeridian.coneSpacingDegs*60, 'bs-');
        set(gca, 'YScale', 'log', 'YLim', [0.3 10], 'YTick', [0.3 1 3 10]);
        set(gca, 'XLim', [-25 25], 'XTick', -30:5:30);
        grid on
        legend({'temporal', 'nasal'});
        xlabel('eccentricity (mm)');
        ylabel('cone spacing (arc min)');

    end

    
    d = struct(...
        'micronsPerDegreeInMacaqueRetina', RGCmodels.CronerKaplan.constants.micronsPerDegreeInMacaqueRetina, ...
        'temporalMeridianData', temporalMeridian, ...
        'nasalMeridianData', nasalMeridian ...
        );

end

function [temporalMeridian, nasalMeridian] = macaqueConeDensity()
    d = [...
         1.315752141746E0	2.540544699554E1; ...
        2.100173359397E0	1.556820285694E1; ...
        3.133501162542E0	1.190325054881E1; ...
        4.220303487145E0	8.327863255262E0; ...
        5.248004924272E0	6.407084412321E0; ...
        6.272388248108E0	5.514920689879E0; ...
        7.322931769492E0	4.846429060902E0; ...
        8.373619556671E0	4.133215035381E0; ...
        9.370544290801E0	3.419880788364E0; ...
        1.044753654132E1	2.885616459765E0; ...
        1.149707020214E1	2.530181606592E0; ...
        1.257348538948E1	2.174806864167E0; ...
        1.359613752377E1	1.819311900245E0; ...
        1.464451705823E1	1.821656219419E0; ...
        1.572093224557E1	1.466281476993E0];
    temporalMeridianPeripheral.eccMM = d(:,1);
    temporalMeridianPeripheral.coneDensityPerSquaredMM = d(:,2)*1e3;
    
    d = [ ...
        3.839230868131E-3	2.104354461603E2; ...
        5.931462883864E-2	1.550495707204E2; ...
        1.142305109927E-1	1.163596472431E2; ...
        1.654619219725E-1	8.761434360462E1; ...
        2.161576263196E-1	7.485452588773E1; ...
        3.136978995538E-1	6.425277257944E1; ...
        4.246308386071E-1	5.401387123041E1; ...
        5.287781603120E-1	4.625779155536E1; ...
        6.394849121203E-1	4.276831759546E1; ...
        7.368109027014E-1	3.856075865583E1; ...
        8.474938453260E-1	3.578175073689E1; ...
        9.481709785098E-1	3.157609653195E1; ...
        1.055502778532E0	2.879518387833E1];

    temporalMeridianFoveal.eccMM = d(:,1);
    temporalMeridianFoveal.coneDensityPerSquaredMM = d(:,2)*1e3;
    
    temporalMeridian.eccMM = ...
        -[temporalMeridianFoveal.eccMM(:); ...
         temporalMeridianPeripheral.eccMM];
    temporalMeridian.coneDensityPerSquaredMM = [...
        temporalMeridianFoveal.coneDensityPerSquaredMM(:); ...
        temporalMeridianPeripheral.coneDensityPerSquaredMM(:)];

	d = [ ...       
         1.745423768752E0	2.554057595714E1; ...
        2.074353222671E0	1.973333333333E1; ...
        3.155017197547E0	1.400000000000E1; ...
        4.225631822940E0	1.013333333333E1; ...
        5.281890234784E0	8.933333333333E0; ...
        6.230237774787E0	7.777777777778E0; ...
        7.336264393600E0	7.333333333333E0; ...
        8.362733662330E0	6.666666666667E0; ...
        9.389681471512E0	5.911111111111E0; ...
        1.044115447884E1	5.600000000000E0; ...
        1.154550620607E1	5.466666666667E0; ...
        1.256934350232E1	5.288888888889E0; ...
        1.362225213100E1	4.711111111111E0; ...
        1.467372513833E1	4.400000000000E0; ...
        1.572543741588E1	4.044444444444E0; ...
        1.672139973082E1	4.044444444444E0; ...
        1.777263346792E1	3.777777777778E0; ...
        1.884815313294E1	4.000000000000E0; ...
        1.992774039180E1	3.466666666667E0];
    nasalMeridianPeripheral.eccMM = d(:,1);
    nasalMeridianPeripheral.coneDensityPerSquaredMM = d(:,2)*1e3;

    d = [ ...
        3.839230868131E-3	2.104354461603E2; ...
        6.377289848240E-2	1.220148045504E2; ...
        1.112960291043E-1	1.039245867916E2; ...
        1.684797360038E-1	9.756277291277E1; ...
        2.225503921373E-1	8.409439388961E1; ...
        3.169180916463E-1	6.816224053942E1; ...
        4.243570329948E-1	6.218423070147E1; ...
        5.317364513840E-1	5.798238596591E1; ...
        6.357766317624E-1	5.342340347519E1; ...
        7.398525259163E-1	4.779872192302E1; ...
        8.505473731328E-1	4.466448098361E1; ...
        9.444746027438E-1	4.187594939120E1; ...
        1.051913544092E0	3.589793955324E1 ...
        ];
    
    nasalMeridianFoveal.eccMM = d(:,1);
    nasalMeridianFoveal.coneDensityPerSquaredMM = d(:,2)*1e3;
    
    nasalMeridian.eccMM = ...
        [nasalMeridianFoveal.eccMM(:); ...
         nasalMeridianPeripheral.eccMM];
    nasalMeridian.coneDensityPerSquaredMM = [...
        nasalMeridianFoveal.coneDensityPerSquaredMM(:); ...
        nasalMeridianPeripheral.coneDensityPerSquaredMM(:)];
    
end