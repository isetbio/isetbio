function peekIntoRTVFobj(theRTVFTobj, iRTVobjIndex, ...
    theSamplingPositionGrid, theConesNumPooledByTheRFcenterGrid, figNo)

    iRTVobjIndexDoesNotCorrespondToFullList = false;
    if (iRTVobjIndex < 0)
        iRTVobjIndex = -iRTVobjIndex;
        iRTVobjIndexDoesNotCorrespondToFullList = true;
    end


    peekIntoConeSpecificRTVFobj(...
        cMosaic.LCONE_ID, ...
        theRTVFTobj.LconeRFcomputeStruct, ...
        iRTVobjIndexDoesNotCorrespondToFullList, ...
        iRTVobjIndex, ...
        theSamplingPositionGrid, ...
        theConesNumPooledByTheRFcenterGrid, ...
        theRTVFTobj.targetVisualRFDoGparams, ...
        theRTVFTobj.multiStartsNumDoGFit, figNo+1);


    peekIntoConeSpecificRTVFobj(...
        cMosaic.MCONE_ID, ...
        theRTVFTobj.MconeRFcomputeStruct, ...
        iRTVobjIndexDoesNotCorrespondToFullList, ...
        iRTVobjIndex, ...
        theSamplingPositionGrid, ...
        theConesNumPooledByTheRFcenterGrid, ...
        theRTVFTobj.targetVisualRFDoGparams, ...
        theRTVFTobj.multiStartsNumDoGFit, figNo+2);


end

function peekIntoConeSpecificRTVFobj( ...
    theConeType, ...
    theConeSpecificRFcomputeStruct, ...
    iRTVobjIndexDoesNotCorrespondToFullList, ...
    iRTVobjIndex, ...
    theSamplingPositionGrid, ...
    theConesNumPooledByTheRFcenterGrid, ...
    targetVisualRFDoGparams, ...
    multiStartsNumDoGFit, figNo)


    % Target and achieved ratios
    targetRsRcRatio = targetVisualRFDoGparams.surroundToCenterRcRatio;
    targetSCintSensRatio = targetVisualRFDoGparams.surroundToCenterIntegratedSensitivityRatio;
    fittedRsRcRatio = theConeSpecificRFcomputeStruct.theSTF.fittedRsRcRatio;
    fittedSCintSensRatio = theConeSpecificRFcomputeStruct.theSTF.fittedSCIntSensRatio;
    targetKsKcRatio = targetSCintSensRatio / (targetRsRcRatio^2);
    fittedKsKcRatio = fittedSCintSensRatio / (fittedRsRcRatio^2);
    

    fprintf('RTVFobj at position (degs): %2.2f %2.2f with %d center cones\n', ...
        theSamplingPositionGrid(iRTVobjIndex,1), theSamplingPositionGrid(iRTVobjIndex,2), theConesNumPooledByTheRFcenterGrid(iRTVobjIndex));
    fprintf('Target Rs/Rc ratio: %2.2f, achieved: %2.2f\n', targetRsRcRatio, fittedRsRcRatio);
    fprintf('Target S/C int. sens. ratio: %2.3f, achieved: %2.3f\n', targetSCintSensRatio, fittedSCintSensRatio);


    switch (theConeType)
        case cMosaic.LCONE_ID
            conesString = 'L-cone(s)';
            
        case cMosaic.MCONE_ID
            conesString = 'M-cone(s)';
           
        otherwise
            error('Not an L- or an M-cone');
    end

    figureName = sprintf('RTVF obj %d located at position (degs): %2.2f, %2.2f with %d center %s', ...
                         iRTVobjIndex, ...
                         theSamplingPositionGrid(iRTVobjIndex,1), ...
                         theSamplingPositionGrid(iRTVobjIndex,2), ...
                         theConesNumPooledByTheRFcenterGrid(iRTVobjIndex), ...
                         conesString);

    RetinaToVisualFieldTransformer.performCronerKaplanSimulation(...
                theConeSpecificRFcomputeStruct.theFittedVisualRFMap, ...
                theConeSpecificRFcomputeStruct.theRetinalRFcenterConeMap, ...
                theConeSpecificRFcomputeStruct.theRetinalRFsurroundConeMap, ...
                theConeSpecificRFcomputeStruct.retinalConePoolingParams.finalValues, ...
                theConeSpecificRFcomputeStruct.retinalConePoolingParams, ...
                theConeSpecificRFcomputeStruct.theRotationOfTheFittedVisualRF, ...
                theConeSpecificRFcomputeStruct.modelConstants.visualRFcenterCharacteristicRadiusDegs, ...
                theConeSpecificRFcomputeStruct.modelConstants.spatialSupportDegs(:,1), ...
                theConeSpecificRFcomputeStruct.modelConstants.targetSTFmatchMode, ...
                theConeSpecificRFcomputeStruct.theSTF.target, ...
                targetVisualRFDoGparams.surroundToCenterRcRatio, ...
                targetVisualRFDoGparams.surroundToCenterIntegratedSensitivityRatio, ...
                multiStartsNumDoGFit, ...
                figNo, figureName);

    hFig = figure(figNo);
    ax = subplot(2,4,[7 8]);

    title(ax, sprintf('retinal pooling params for RFs with %d center %s around (%2.2f,%2.2f) degs', ...
               theConesNumPooledByTheRFcenterGrid(iRTVobjIndex), conesString, theSamplingPositionGrid(iRTVobjIndex,1), theSamplingPositionGrid(iRTVobjIndex,2)));


    % Plot correspondence between target and achieved ratios
    ax = subplot(2,4,4);
    bar(ax, 1, 100*((fittedRsRcRatio/targetRsRcRatio)-1), 'BaseValue', 0.0);
    hold(ax, 'on');
    bar(ax, 2, 100*((fittedSCintSensRatio/targetSCintSensRatio)-1), 'BaseValue', 0.0);


    bar(ax, 3, 100*((fittedKsKcRatio/targetKsKcRatio)-1), 'BaseValue', 0.0);
    axis(ax, 'square');
    grid(ax, 'on');
    set(ax, 'XLim', [0 4],  'XTick', [1 2 3], 'XTickLabel', {'Rs/Rc','S/C sens', 'Ks/Kc'}, ...
        'YLim', [-100 100], 'FontSize', 16, 'YTick', -100:20:100);
    ylabel(ax,'(fitted-target)/target');
    
    drawnow;
    
    if (iRTVobjIndexDoesNotCorrespondToFullList)
        pdfFileName = sprintf('RTVFobj_X_at_%2.2f_%2.2fdegs_with%d_center_%s.pdf', ...
                         theSamplingPositionGrid(iRTVobjIndex,1), ...
                         theSamplingPositionGrid(iRTVobjIndex,2), ...
                         theConesNumPooledByTheRFcenterGrid(iRTVobjIndex), ...
                         conesString);
    else
        pdfFileName = sprintf('RTVFobj_%d_at_%2.2f_%2.2fdegs_with_%d_center_%s.pdf', ...
                         iRTVobjIndex, ...
                         theSamplingPositionGrid(iRTVobjIndex,1), ...
                         theSamplingPositionGrid(iRTVobjIndex,2), ...
                         theConesNumPooledByTheRFcenterGrid(iRTVobjIndex), ...
                         conesString);
    end
    
    NicePlot.exportFigToPDF(pdfFileName, hFig, 300);

end