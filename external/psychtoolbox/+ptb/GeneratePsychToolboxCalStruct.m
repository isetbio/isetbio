% Method to generate a PTB CalStruct for a display with given properties
%
% Synopsis cal = ptb.GeneratePsychToolboxCalStruct;
%
% Description:
%    Generate a PTB calibration structure with default properties.  Allows
%    passing in of some key properties as key value pairs. 
%
%    Note that PTB expects power in units of power per wavelength band, not
%    power per nanometer. These are the units (per wavelength band)
%    returned by routine MeasSpd in the PTB, for example. If you've got
%    power per nm, multiply by the wavelength sample spacing (which needs
%    to be equally spaced in PTB land).
%
% Optional key/value pairs:
%    'name'         -  String to go into the calibration structure.
%    'dotsPerMeter' -  Pixels per meter.  Used to compute screen size in mm
%                      for the calibration structure describe field, from
%                      the screen size in pixels.
%    'gammaInput'   -  Input values on which the sample gamma table is
%                      specified. Column vector.
%    'gammaTable'   -  Gamma table values for each primary, in columns of a
%                      matrix. If you specify this, better specify
%                      gammaInput as well.
%    'wave'         -  Wavelength spacing for spectra. Can be a column
%                      vector of equally spaced sampled wavelengths, or a 3
%                      by 1 S vector with entries [startWl deltaWl
%                      nWlSamples].
%    'spd'          -  Matrix of device primaries in the columns of a
%                      matrix. Should have power in units of power per
%                      wavelength band, not power per nm.
%    'ambientSpd'   -  Vector with ambient spectrum (aka black spectrum).
%                      Should have power in units of power per wavelength
%                      band, not power per nm.
%    'screenSizeInPixels - Row vector with number of pixels, [h v].
%
% See also ptb.GenerateIsetbioDisplayObjectFromPTBCalStruct,
%          ptb.GeneratePTCalstructFromIsetbioDisplayObject.

% History:
%   4/11/15  dhb  Change default gamma type to crtLinear.  This doesn't use
%                 optimization toolbox, and is more like what isetbio does.
%   1/16/21  dhb  Header comments.  And allow wave to be in S format as well
%                 as list of wavelengths.

function cal = GeneratePsychToolboxCalStruct(varargin)
    % Parse inputs
    parser = inputParser;
    parser.addParamValue('name', [], @ischar);
    parser.addParamValue('dotsPerMeter', [], @isscalar);
    parser.addParamValue('gammaInput', [], @isvector);
    parser.addParamValue('gammaTable', [], @ismatrix);
    parser.addParamValue('wave', [], @isvector);
    parser.addParamValue('spd', [], @ismatrix);
    parser.addParamValue('ambientSpd', [], @ismatrix);
    parser.addParamValue('screenSizeInPixels', [], @isvector);
         
    % Execute the parser
    parser.parse(varargin{:});
    % Create a standard Matlab structure from the parser results.
    parserResults = parser.Results;
    pNames = fieldnames(parserResults);
    for k = 1:length(pNames)
        eval(sprintf('%s = parserResults.%s;', pNames{k}, pNames{k})); 
    end

    spectralSamples  = size(wave,1);
    nDevices         = size(gammaTable,2);
    
    displayDescriptionStruct = struct( ...
     'screenSizeMM', screenSizeInPixels/(dotsPerMeter/1000), ...
  'screenSizePixel', screenSizeInPixels, ...
      'refreshRate', 60, ...
     'bitsPerPixel', 32, ...
    'bitsPerSample', 8, ...
  'samplesPerPixel', nDevices ...
        );

    gammaStruct = struct(...
            'fitType','crtLinear', ...
   'contrastThresh', 0.001, ...
        'exponents', [], ...
   'fitBreakThresh', [], ...
        'useweight', [] ...
        );
    
    describeStruct = struct( ...
                     'S', MakeItS(wave), ...
      'blankOtherScreen', 1, ...
         'blankSettings', [], ...
            'boxOffsetX', 0, ...
            'boxOffsetY', 0, ...
               'boxSize', 150, ...
       'calibrationType', 'name of display', ...
               'caltype', 'monitor', ...
               'comment', 'some comment', ...
              'computer', 'some brainard lab computer', ...
               'dacsize', 8, ...
                  'date', 'date of calibration', ...
    'displayDescription', displayDescriptionStruct, ...
                'driver', 'unknown_driver unknown_driver_version', ...
                 'gamma', gammaStruct, ...
                    'hz', 60, ...
         'leaveRoomTime', 10, ...
         'meterDistance', 0.5000, ...
               'monitor', 'name of display', ...
              'nAverage', 2, ...
                 'nMeas', 25, ...
               'program', 'name of calibration program', ...
         'promptforname', 1, ...
       'screenSizePixel', [1920 1200], ...
               'svnInfo', struct(), ...
      'whichBlankScreen', 3, ...
        'whichMeterType', 5, ...
           'whichScreen', 2, ...
                   'who', 'name of person that did the calibration', ...
           'yokedmethod', [] ...
        );
    
    rawDataStruct = struct(...
       'rawGammaInput', gammaInput', ...
       'rawGammaTable', gammaTable ...
    );
    
    
    % Generate a calStruct suitable for use with PTB Cal functions
    cal = struct(...
            'describe', describeStruct, ...
    'M_ambient_linear', [], ...
     'M_device_linear', [], ...
     'M_linear_device', [], ...
           'P_ambient', ambientSpd, ... 
            'P_device', spd, ...
           'S_ambient', WlsToS(wave), ...
            'S_device', [], ...
            'S_linear', [], ...
            'S_sensor', [], ...
           'T_ambient', eye(spectralSamples), ...
            'T_device', eye(spectralSamples), ...
            'T_linear', [], ...
            'T_sensor', [], ...
      'ambient_linear', [], ...
           'basicmeas', struct(), ...
             'bgColor', [], ...
              'bgmeas', struct(), ...
             'fgColor', [], ...
         'gammaFormat', 0, ...
          'gammaInput', gammaInput', ...
           'gammaMode', [], ...
          'gammaTable', gammaTable, ...
         'iGammaTable', [], ...
             'rawdata', rawDataStruct, ...
            'nDevices', nDevices, ...
       'nPrimaryBases', 1 ...
  );
  
end